

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Jan 09 16:22:14 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.30
    52                           ; Generated 26/08/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _TRISA	set	3986
    87  0000                     _TRISCbits	set	3988
    88  0000                     _TRISBbits	set	3987
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADRESL	set	4035
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADCON2bits	set	4032
    93  0000                     _ADCON1	set	4033
    94  0000                     _CCP1CON	set	4029
    95  0000                     _RCONbits	set	4048
    96  0000                     _RCREG	set	4014
    97  0000                     _TXREG	set	4013
    98  0000                     _IPR1bits	set	3999
    99  0000                     _PIE1bits	set	3997
   100  0000                     _PIR1bits	set	3998
   101  0000                     _RCSTAbits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _BAUDCONbits	set	4024
   104  0000                     _TXSTAbits	set	4012
   105  0000                     _ADFM	set	32263
   106  0000                     _CREN	set	32092
   107  0000                     _RCIF	set	31989
   108  0000                     _IRCF0	set	32412
   109  0000                     _IRCF1	set	32413
   110  0000                     _IRCF2	set	32414
   111  0000                     _INTCONbits	set	4082
   112                           
   113                           	psect	smallconst
   114  000600                     __psmallconst:
   115                           	callstack 0
   116  000600  00                 	db	0
   117  000601                     STR_1:
   118  000601  69                 	db	105	;'i'
   119  000602  6E                 	db	110	;'n'
   120  000603  74                 	db	116	;'t'
   121  000604  65                 	db	101	;'e'
   122  000605  72                 	db	114	;'r'
   123  000606  72                 	db	114	;'r'
   124  000607  75                 	db	117	;'u'
   125  000608  70                 	db	112	;'p'
   126  000609  74                 	db	116	;'t'
   127  00060A  0A                 	db	10
   128  00060B  00                 	db	0
   129  00060C                     STR_2:
   130  00060C  68                 	db	104	;'h'
   131  00060D  65                 	db	101	;'e'
   132  00060E  79                 	db	121	;'y'
   133  00060F  0A                 	db	10
   134  000610  00                 	db	0
   135  000611                     STR_3:
   136  000611  25                 	db	37
   137  000612  64                 	db	100	;'d'
   138  000613  0A                 	db	10
   139  000614  00                 	db	0
   140  000615  00                 	db	0	; dummy byte at the end
   141  0000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145  001424                     __pcinit:
   146                           	callstack 0
   147  001424                     start_initialization:
   148                           	callstack 0
   149  001424                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Clear objects allocated to BANK0 (74 bytes)
   153  001424  EE00  F080         	lfsr	0,__pbssBANK0
   154  001428  0E4A               	movlw	74
   155  00142A                     clear_0:
   156  00142A  6AEE               	clrf	postinc0,c
   157  00142C  06E8               	decf	wreg,f,c
   158  00142E  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to COMRAM (8 bytes)
   161  001430  EE00  F05D         	lfsr	0,__pbssCOMRAM
   162  001434  0E08               	movlw	8
   163  001436                     clear_1:
   164  001436  6AEE               	clrf	postinc0,c
   165  001438  06E8               	decf	wreg,f,c
   166  00143A  E1FD               	bnz	clear_1
   167  00143C                     end_of_initialization:
   168                           	callstack 0
   169  00143C                     __end_of__initialization:
   170                           	callstack 0
   171  00143C  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172  00143E  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173  001440  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  001442  6EF8               	movwf	tblptru,c
   175  001444  0100               	movlb	0
   176  001446  EFFA  F009         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  00005D                     __pbssCOMRAM:
   180                           	callstack 0
   181  00005D                     _width:
   182                           	callstack 0
   183  00005D                     	ds	2
   184  00005F                     _prec:
   185                           	callstack 0
   186  00005F                     	ds	2
   187  000061                     _flags:
   188                           	callstack 0
   189  000061                     	ds	2
   190  000063                     _lenStr:
   191                           	callstack 0
   192  000063                     	ds	2
   193                           
   194                           	psect	bssBANK0
   195  000080                     __pbssBANK0:
   196                           	callstack 0
   197  000080                     _str:
   198                           	callstack 0
   199  000080                     	ds	20
   200  000094                     _nout:
   201                           	callstack 0
   202  000094                     	ds	2
   203  000096                     _dbuf:
   204                           	callstack 0
   205  000096                     	ds	32
   206  0000B6                     _mystring:
   207                           	callstack 0
   208  0000B6                     	ds	20
   209                           
   210                           	psect	cstackBANK0
   211  0000CA                     __pcstackBANK0:
   212                           	callstack 0
   213  0000CA                     ?_vfpfcnvrt:
   214                           	callstack 0
   215  0000CA                     vfpfcnvrt@fp:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x0
   219  0000CA                     	ds	2
   220  0000CC                     vfpfcnvrt@fmt:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x2
   224  0000CC                     	ds	2
   225  0000CE                     vfpfcnvrt@ap:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x4
   229  0000CE                     	ds	2
   230  0000D0                     vfpfcnvrt@ll:
   231                           	callstack 0
   232                           
   233                           ; 8 bytes @ 0x6
   234  0000D0                     	ds	8
   235  0000D8                     ?_vfprintf:
   236                           	callstack 0
   237  0000D8                     vfprintf@fp:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xE
   241  0000D8                     	ds	2
   242  0000DA                     vfprintf@fmt:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x10
   246  0000DA                     	ds	2
   247  0000DC                     vfprintf@ap:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x12
   251  0000DC                     	ds	2
   252  0000DE                     vfprintf@cfmt:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x14
   256  0000DE                     	ds	2
   257  0000E0                     ?_sprintf:
   258                           	callstack 0
   259  0000E0                     sprintf@s:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x16
   263  0000E0                     	ds	2
   264  0000E2                     sprintf@fmt:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x18
   268  0000E2                     	ds	6
   269  0000E8                     sprintf@ap:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x1E
   273  0000E8                     	ds	2
   274  0000EA                     sprintf@f:
   275                           	callstack 0
   276                           
   277                           ; 6 bytes @ 0x20
   278  0000EA                     	ds	6
   279  0000F0                     write_adc@str:
   280                           	callstack 0
   281                           
   282                           ; 12 bytes @ 0x26
   283  0000F0                     	ds	14
   284  0000FE                     write_adc@n:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x34
   288  0000FE                     	ds	2
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	callstack 0
   293  000001                     i2UART_Write@data:
   294                           	callstack 0
   295  000001                     i2ClearBuffer@i:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x0
   299  000001                     	ds	1
   300  000002                     i2UART_Write_Text@text:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1
   304  000002                     	ds	2
   305  000004                     ??i2_UART_Write_Text:
   306                           
   307                           ; 1 bytes @ 0x3
   308  000004                     	ds	2
   309  000006                     i2UART_Write_Text@i:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x5
   313  000006                     	ds	2
   314  000008                     ??_ISR:
   315                           
   316                           ; 1 bytes @ 0x7
   317  000008                     	ds	8
   318  000010                     ?___awmod:
   319                           	callstack 0
   320  000010                     i1UART_Write@data:
   321                           	callstack 0
   322  000010                     ___awmod@dividend:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xF
   326  000010                     	ds	2
   327  000012                     ___awmod@divisor:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x11
   331  000012                     	ds	2
   332  000014                     ___awmod@counter:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x13
   336  000014                     	ds	1
   337  000015                     ___awmod@sign:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x14
   341  000015                     	ds	1
   342  000016                     ??_Lo_ISR:
   343                           
   344                           ; 1 bytes @ 0x15
   345  000016                     	ds	5
   346  00001B                     ?_GetString:
   347                           	callstack 0
   348  00001B                     ?_strlen:
   349                           	callstack 0
   350  00001B                     ?_ADC_Read:
   351                           	callstack 0
   352  00001B                     ?___aodiv:
   353                           	callstack 0
   354  00001B                     ?___aomod:
   355                           	callstack 0
   356  00001B                     UART_Write@data:
   357                           	callstack 0
   358  00001B                     ClearBuffer@i:
   359                           	callstack 0
   360  00001B                     ADC_Read@channel:
   361                           	callstack 0
   362  00001B                     fputc@c:
   363                           	callstack 0
   364  00001B                     strlen@s:
   365                           	callstack 0
   366  00001B                     ___aodiv@dividend:
   367                           	callstack 0
   368  00001B                     ___aomod@dividend:
   369                           	callstack 0
   370                           
   371                           ; 8 bytes @ 0x1A
   372  00001B                     	ds	1
   373  00001C                     UART_Write_Text@text:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x1B
   377  00001C                     	ds	1
   378  00001D                     ??_ADC_Read:
   379  00001D                     fputc@fp:
   380                           	callstack 0
   381  00001D                     strlen@a:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x1C
   385  00001D                     	ds	1
   386  00001E                     ??_UART_Write_Text:
   387                           
   388                           ; 1 bytes @ 0x1D
   389  00001E                     	ds	1
   390  00001F                     ??_fputc:
   391  00001F                     ADC_Read@digital:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x1E
   395  00001F                     	ds	1
   396  000020                     UART_Write_Text@i:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x1F
   400  000020                     	ds	3
   401  000023                     ___aodiv@divisor:
   402                           	callstack 0
   403  000023                     ___aomod@divisor:
   404                           	callstack 0
   405                           
   406                           ; 8 bytes @ 0x22
   407  000023                     	ds	1
   408  000024                     fputs@s:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x23
   412  000024                     	ds	2
   413  000026                     fputs@fp:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x25
   417  000026                     	ds	2
   418  000028                     fputs@c:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x27
   422  000028                     	ds	1
   423  000029                     fputs@i:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x28
   427  000029                     	ds	2
   428  00002B                     ?_pad:
   429                           	callstack 0
   430  00002B                     ___aodiv@counter:
   431                           	callstack 0
   432  00002B                     ___aomod@counter:
   433                           	callstack 0
   434  00002B                     pad@fp:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x2A
   438  00002B                     	ds	1
   439  00002C                     ___aodiv@sign:
   440                           	callstack 0
   441  00002C                     ___aomod@sign:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x2B
   445  00002C                     	ds	1
   446  00002D                     ?_abs:
   447                           	callstack 0
   448  00002D                     pad@buf:
   449                           	callstack 0
   450  00002D                     abs@a:
   451                           	callstack 0
   452  00002D                     ___aodiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 8 bytes @ 0x2C
   456  00002D                     	ds	2
   457  00002F                     ??_abs:
   458  00002F                     pad@p:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x2E
   462  00002F                     	ds	2
   463  000031                     ??_pad:
   464                           
   465                           ; 1 bytes @ 0x30
   466  000031                     	ds	1
   467  000032                     pad@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x31
   471  000032                     	ds	2
   472  000034                     pad@w:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x33
   476  000034                     	ds	2
   477  000036                     ?_dtoa:
   478                           	callstack 0
   479  000036                     dtoa@fp:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x35
   483  000036                     	ds	2
   484  000038                     dtoa@d:
   485                           	callstack 0
   486                           
   487                           ; 8 bytes @ 0x37
   488  000038                     	ds	8
   489  000040                     ??_dtoa:
   490                           
   491                           ; 1 bytes @ 0x3F
   492  000040                     	ds	8
   493  000048                     _dtoa$1358:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x47
   497  000048                     	ds	2
   498  00004A                     dtoa@p:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x49
   502  00004A                     	ds	2
   503  00004C                     dtoa@w:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x4B
   507  00004C                     	ds	2
   508  00004E                     dtoa@s:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x4D
   512  00004E                     	ds	2
   513  000050                     dtoa@n:
   514                           	callstack 0
   515                           
   516                           ; 8 bytes @ 0x4F
   517  000050                     	ds	8
   518  000058                     dtoa@i:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x57
   522  000058                     	ds	2
   523  00005A                     ??_vfpfcnvrt:
   524                           
   525                           ; 1 bytes @ 0x59
   526  00005A                     	ds	2
   527  00005C                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x5B
   530  00005C                     	ds	1
   531                           
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   534 ;;
   535 ;; *************** function _main *****************
   536 ;; Defined at:
   537 ;;		line 21 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         0       0       0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0
   553 ;;      Temps:          1       0       0       0       0       0       0
   554 ;;      Totals:         1       0       0       0       0       0       0
   555 ;;Total ram usage:        1 bytes
   556 ;; Hardware stack levels required when called:   15
   557 ;; This function calls:
   558 ;;		_ClearBuffer
   559 ;;		_SYSTEM_Initialize
   560 ;;		_UART_Write_Text
   561 ;;		_write_adc
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text0
   568  0013F4                     __ptext0:
   569                           	callstack 0
   570  0013F4                     _main:
   571                           	callstack 16
   572  0013F4                     
   573                           ;main.c: 23:     SYSTEM_Initialize() ;
   574  0013F4  EC36  F00A         	call	_SYSTEM_Initialize	;wreg free
   575  0013F8                     
   576                           ;main.c: 24:     UART_Write_Text("hey\n");
   577  0013F8  0E0C               	movlw	low STR_2
   578  0013FA  6E1C               	movwf	UART_Write_Text@text^0,c
   579  0013FC  0E06               	movlw	high STR_2
   580  0013FE  6E1D               	movwf	(UART_Write_Text@text+1)^0,c
   581  001400  ECEA  F007         	call	_UART_Write_Text	;wreg free
   582  001404                     l2106:
   583                           
   584                           ;main.c: 26:         ClearBuffer();
   585  001404  EC7D  F009         	call	_ClearBuffer	;wreg free
   586  001408                     
   587                           ;main.c: 27:         write_adc();
   588  001408  ECF5  F008         	call	_write_adc	;wreg free
   589  00140C                     
   590                           ;main.c: 28:         _delay((unsigned long)((50)*(4000000/4000.0)));
   591  00140C  0E41               	movlw	65
   592  00140E  6E5C               	movwf	??_main^0,c
   593  001410  0EEE               	movlw	238
   594  001412                     u1757:
   595  001412  2EE8               	decfsz	wreg,f,c
   596  001414  D7FE               	bra	u1757
   597  001416  2E5C               	decfsz	??_main^0,f,c
   598  001418  D7FC               	bra	u1757
   599  00141A  D000               	nop2	
   600  00141C  EF02  F00A         	goto	l2106
   601  001420  EF36  F000         	goto	start
   602  001424                     __end_of_main:
   603                           	callstack 0
   604                           
   605 ;; *************** function _write_adc *****************
   606 ;; Defined at:
   607 ;;		line 33 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  str            12   38[BANK0 ] unsigned char [12]
   612 ;;  n               2   52[BANK0 ] int 
   613 ;;  s               2    0        PTR unsigned char 
   614 ;;		 -> mystring(20), 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         0       0       0       0       0       0       0
   625 ;;      Locals:         0      16       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0
   627 ;;      Totals:         0      16       0       0       0       0       0
   628 ;;Total ram usage:       16 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:   14
   631 ;; This function calls:
   632 ;;		_ADC_Read
   633 ;;		_GetString
   634 ;;		_UART_Write_Text
   635 ;;		_sprintf
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text1
   642  0011EA                     __ptext1:
   643                           	callstack 0
   644  0011EA                     _write_adc:
   645                           	callstack 16
   646  0011EA  EC74  F00A         	call	_GetString	;wreg free
   647                           
   648                           ;main.c: 35:     int n = ADC_Read(0);
   649  0011EE  0E00               	movlw	0
   650  0011F0  6E1C               	movwf	(ADC_Read@channel+1)^0,c
   651  0011F2  0E00               	movlw	0
   652  0011F4  6E1B               	movwf	ADC_Read@channel^0,c
   653  0011F6  EC39  F009         	call	_ADC_Read	;wreg free
   654  0011FA  C01B  F0FE         	movff	?_ADC_Read,write_adc@n
   655  0011FE  C01C  F0FF         	movff	?_ADC_Read+1,write_adc@n+1
   656  001202                     
   657                           ;main.c: 37:     char str[12];;main.c: 38:     sprintf(str, "%d\n", n);
   658  001202  0EF0               	movlw	low write_adc@str
   659  001204  0100               	movlb	0	; () banked
   660  001206  6FE0               	movwf	sprintf@s& (0+255),b
   661  001208  0E00               	movlw	high write_adc@str
   662  00120A  6FE1               	movwf	(sprintf@s+1)& (0+255),b
   663  00120C  0E11               	movlw	low STR_3
   664  00120E  6FE2               	movwf	sprintf@fmt& (0+255),b
   665  001210  0E06               	movlw	high STR_3
   666  001212  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
   667  001214  C0FE  F0E4         	movff	write_adc@n,?_sprintf+4
   668  001218  C0FF  F0E5         	movff	write_adc@n+1,?_sprintf+5
   669  00121C  ECCC  F008         	call	_sprintf	;wreg free
   670  001220                     
   671                           ;main.c: 39:     UART_Write_Text(str);
   672  001220  0EF0               	movlw	low write_adc@str
   673  001222  6E1C               	movwf	UART_Write_Text@text^0,c
   674  001224  0E00               	movlw	high write_adc@str
   675  001226  6E1D               	movwf	(UART_Write_Text@text+1)^0,c
   676  001228  ECEA  F007         	call	_UART_Write_Text	;wreg free
   677  00122C  0012               	return		;funcret
   678  00122E                     __end_of_write_adc:
   679                           	callstack 0
   680                           
   681 ;; *************** function _sprintf *****************
   682 ;; Defined at:
   683 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  s               2   22[BANK0 ] PTR unsigned char 
   686 ;;		 -> write_adc@str(12), 
   687 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
   688 ;;		 -> STR_3(4), 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  f               6   32[BANK0 ] struct _IO_FILE
   691 ;;  ap              2   30[BANK0 ] PTR void [1]
   692 ;;		 -> ?_sprintf(2), 
   693 ;;  ret             2    0        int 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  2   22[BANK0 ] int 
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         0       6       0       0       0       0       0
   704 ;;      Locals:         0      10       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0
   706 ;;      Totals:         0      16       0       0       0       0       0
   707 ;;Total ram usage:       16 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:   13
   710 ;; This function calls:
   711 ;;		_vfprintf
   712 ;; This function is called by:
   713 ;;		_write_adc
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  001198                     __ptext2:
   719                           	callstack 0
   720  001198                     _sprintf:
   721                           	callstack 16
   722  001198  0EE4               	movlw	low (?_sprintf+4)
   723  00119A  0100               	movlb	0	; () banked
   724  00119C  6FE8               	movwf	sprintf@ap& (0+255),b
   725  00119E  0E00               	movlw	high (?_sprintf+4)
   726  0011A0  6FE9               	movwf	(sprintf@ap+1)& (0+255),b
   727  0011A2  C0E0  F0EA         	movff	sprintf@s,sprintf@f
   728  0011A6  C0E1  F0EB         	movff	sprintf@s+1,sprintf@f+1
   729  0011AA                     
   730                           ; BSR set to: 0
   731  0011AA  0E00               	movlw	0
   732  0011AC  6FED               	movwf	(sprintf@f+3)& (0+255),b
   733  0011AE  0E00               	movlw	0
   734  0011B0  6FEC               	movwf	(sprintf@f+2)& (0+255),b
   735  0011B2                     
   736                           ; BSR set to: 0
   737  0011B2  0E00               	movlw	0
   738  0011B4  6FEF               	movwf	(sprintf@f+5)& (0+255),b
   739  0011B6  0E00               	movlw	0
   740  0011B8  6FEE               	movwf	(sprintf@f+4)& (0+255),b
   741  0011BA                     
   742                           ; BSR set to: 0
   743  0011BA  0EEA               	movlw	low sprintf@f
   744  0011BC  6FD8               	movwf	vfprintf@fp& (0+255),b
   745  0011BE  0E00               	movlw	high sprintf@f
   746  0011C0  6FD9               	movwf	(vfprintf@fp+1)& (0+255),b
   747  0011C2  C0E2  F0DA         	movff	sprintf@fmt,vfprintf@fmt
   748  0011C6  C0E3  F0DB         	movff	sprintf@fmt+1,vfprintf@fmt+1
   749  0011CA  0EE8               	movlw	low sprintf@ap
   750  0011CC  6FDC               	movwf	vfprintf@ap& (0+255),b
   751  0011CE  0E00               	movlw	high sprintf@ap
   752  0011D0  6FDD               	movwf	(vfprintf@ap+1)& (0+255),b
   753  0011D2  EC9B  F008         	call	_vfprintf	;wreg free
   754  0011D6  0100               	movlb	0	; () banked
   755  0011D8  51EC               	movf	(sprintf@f+2)& (0+255),w,b
   756  0011DA  25E0               	addwf	sprintf@s& (0+255),w,b
   757  0011DC  6ED9               	movwf	fsr2l,c
   758  0011DE  51ED               	movf	(sprintf@f+3)& (0+255),w,b
   759  0011E0  21E1               	addwfc	(sprintf@s+1)& (0+255),w,b
   760  0011E2  6EDA               	movwf	fsr2h,c
   761  0011E4  0E00               	movlw	0
   762  0011E6  6EDF               	movwf	indf2,c
   763  0011E8                     
   764                           ; BSR set to: 0
   765  0011E8  0012               	return		;funcret
   766  0011EA                     __end_of_sprintf:
   767                           	callstack 0
   768                           
   769 ;; *************** function _vfprintf *****************
   770 ;; Defined at:
   771 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
   774 ;;		 -> sprintf@f(6), 
   775 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
   776 ;;		 -> STR_3(4), 
   777 ;;  ap              2   18[BANK0 ] PTR PTR void 
   778 ;;		 -> sprintf@ap(2), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  cfmt            2   20[BANK0 ] PTR unsigned char 
   781 ;;		 -> STR_3(4), 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2   14[BANK0 ] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   791 ;;      Params:         0       6       0       0       0       0       0
   792 ;;      Locals:         0       2       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0
   794 ;;      Totals:         0       8       0       0       0       0       0
   795 ;;Total ram usage:        8 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:   12
   798 ;; This function calls:
   799 ;;		_vfpfcnvrt
   800 ;; This function is called by:
   801 ;;		_sprintf
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text3
   806  001136                     __ptext3:
   807                           	callstack 0
   808  001136                     _vfprintf:
   809                           	callstack 16
   810  001136                     
   811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   812  001136  C0DA  F0DE         	movff	vfprintf@fmt,vfprintf@cfmt
   813  00113A  C0DB  F0DF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   814  00113E                     
   815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   816  00113E  0E00               	movlw	0
   817  001140  0100               	movlb	0	; () banked
   818  001142  6F95               	movwf	(_nout+1)& (0+255),b
   819  001144  0E00               	movlw	0
   820  001146  6F94               	movwf	_nout& (0+255),b
   821                           
   822                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   823  001148  EFB9  F008         	goto	l2082
   824  00114C                     l2080:
   825                           
   826                           ; BSR set to: 0
   827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   828  00114C  C0D8  F0CA         	movff	vfprintf@fp,vfpfcnvrt@fp
   829  001150  C0D9  F0CB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   830  001154  0EDE               	movlw	low vfprintf@cfmt
   831  001156  6FCC               	movwf	vfpfcnvrt@fmt& (0+255),b
   832  001158  0E00               	movlw	high vfprintf@cfmt
   833  00115A  6FCD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
   834  00115C  C0DC  F0CE         	movff	vfprintf@ap,vfpfcnvrt@ap
   835  001160  C0DD  F0CF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   836  001164  EC7A  F004         	call	_vfpfcnvrt	;wreg free
   837  001168  0100               	movlb	0	; () banked
   838  00116A  51CA               	movf	?_vfpfcnvrt& (0+255),w,b
   839  00116C  2794               	addwf	_nout& (0+255),f,b
   840  00116E  51CB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
   841  001170  2395               	addwfc	(_nout+1)& (0+255),f,b
   842  001172                     l2082:
   843                           
   844                           ; BSR set to: 0
   845                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   846  001172  C0DE  FFF6         	movff	vfprintf@cfmt,tblptrl
   847  001176  C0DF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   848  00117A                     	if	0	;tblptru may be non-zero
   849  00117A                     	endif
   850  00117A                     	if	0	;tblptru may be non-zero
   851  00117A                     	endif
   852  00117A  0008               	tblrd		*
   853  00117C  50F5               	movf	tablat,w,c
   854  00117E  0900               	iorlw	0
   855  001180  A4D8               	btfss	status,2,c
   856  001182  EFC5  F008         	goto	u1741
   857  001186  EFC7  F008         	goto	u1740
   858  00118A                     u1741:
   859  00118A  EFA6  F008         	goto	l2080
   860  00118E                     u1740:
   861  00118E                     
   862                           ; BSR set to: 0
   863                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   864  00118E  C094  F0D8         	movff	_nout,?_vfprintf
   865  001192  C095  F0D9         	movff	_nout+1,?_vfprintf+1
   866  001196                     
   867                           ; BSR set to: 0
   868  001196  0012               	return		;funcret
   869  001198                     __end_of_vfprintf:
   870                           	callstack 0
   871                           
   872 ;; *************** function _vfpfcnvrt *****************
   873 ;; Defined at:
   874 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   877 ;;		 -> sprintf@f(6), 
   878 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
   879 ;;		 -> vfprintf@cfmt(2), 
   880 ;;  ap              2    4[BANK0 ] PTR PTR void 
   881 ;;		 -> sprintf@ap(2), 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  ll              8    6[BANK0 ] long long 
   884 ;;  llu             8    0        unsigned long long 
   885 ;;  f               4    0        unsigned long long 
   886 ;;  vp              3    0        PTR void 
   887 ;;  ct              3    0        unsigned char [3]
   888 ;;  cp              3    0        PTR unsigned char 
   889 ;;  i               2    0        int 
   890 ;;  done            2    0        int 
   891 ;;  c               1    0        unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2    0[BANK0 ] int 
   894 ;; Registers used:
   895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   901 ;;      Params:         0       6       0       0       0       0       0
   902 ;;      Locals:         0       8       0       0       0       0       0
   903 ;;      Temps:          2       0       0       0       0       0       0
   904 ;;      Totals:         2      14       0       0       0       0       0
   905 ;;Total ram usage:       16 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:   11
   908 ;; This function calls:
   909 ;;		_dtoa
   910 ;;		_fputc
   911 ;; This function is called by:
   912 ;;		_vfprintf
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text4
   917  0008F4                     __ptext4:
   918                           	callstack 0
   919  0008F4                     _vfpfcnvrt:
   920                           	callstack 16
   921  0008F4                     
   922                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   923  0008F4  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   924  0008F8  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   925  0008FC  CFDE FFF6          	movff	postinc2,tblptrl
   926  000900  CFDD FFF7          	movff	postdec2,tblptrh
   927  000904                     	if	0	;tblptru may be non-zero
   928  000904                     	endif
   929  000904                     	if	0	;tblptru may be non-zero
   930  000904                     	endif
   931  000904  0008               	tblrd		*
   932  000906  50F5               	movf	tablat,w,c
   933  000908  0A25               	xorlw	37
   934  00090A  A4D8               	btfss	status,2,c
   935  00090C  EF8A  F004         	goto	u1701
   936  000910  EF8C  F004         	goto	u1700
   937  000914                     u1701:
   938  000914  EF3A  F005         	goto	l2068
   939  000918                     u1700:
   940  000918                     
   941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   942  000918  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   943  00091C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   944  000920  2ADE               	incf	postinc2,f,c
   945  000922  0E00               	movlw	0
   946  000924  22DD               	addwfc	postdec2,f,c
   947  000926                     
   948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   949  000926  0E00               	movlw	0
   950  000928  6E5E               	movwf	(_width+1)^0,c
   951  00092A  0E00               	movlw	0
   952  00092C  6E5D               	movwf	_width^0,c
   953  00092E  C05D  F061         	movff	_width,_flags
   954  000932  C05E  F062         	movff	_width+1,_flags+1
   955  000936                     
   956                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   957  000936  685F               	setf	_prec^0,c
   958  000938  6860               	setf	(_prec+1)^0,c
   959  00093A                     
   960                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   961  00093A  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   962  00093E  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   963  000942  CFDE FFF6          	movff	postinc2,tblptrl
   964  000946  CFDD FFF7          	movff	postdec2,tblptrh
   965  00094A                     	if	0	;tblptru may be non-zero
   966  00094A                     	endif
   967  00094A                     	if	0	;tblptru may be non-zero
   968  00094A                     	endif
   969  00094A  0008               	tblrd		*
   970  00094C  50F5               	movf	tablat,w,c
   971  00094E  0A64               	xorlw	100
   972  000950  B4D8               	btfsc	status,2,c
   973  000952  EFAD  F004         	goto	u1711
   974  000956  EFAF  F004         	goto	u1710
   975  00095A                     u1711:
   976  00095A  EFC1  F004         	goto	l2046
   977  00095E                     u1710:
   978  00095E  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   979  000962  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   980  000966  CFDE FFF6          	movff	postinc2,tblptrl
   981  00096A  CFDD FFF7          	movff	postdec2,tblptrh
   982  00096E                     	if	0	;tblptru may be non-zero
   983  00096E                     	endif
   984  00096E                     	if	0	;tblptru may be non-zero
   985  00096E                     	endif
   986  00096E  0008               	tblrd		*
   987  000970  50F5               	movf	tablat,w,c
   988  000972  0A69               	xorlw	105
   989  000974  A4D8               	btfss	status,2,c
   990  000976  EFBF  F004         	goto	u1721
   991  00097A  EFC1  F004         	goto	u1720
   992  00097E                     u1721:
   993  00097E  EF02  F005         	goto	l2052
   994  000982                     u1720:
   995  000982                     l2046:
   996                           
   997                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   998  000982  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   999  000986  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1000  00098A  2ADE               	incf	postinc2,f,c
  1001  00098C  0E00               	movlw	0
  1002  00098E  22DD               	addwfc	postdec2,f,c
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1005  000990  C0CE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1006  000994  C0CF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1007  000998  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  1008  00099C  0E02               	movlw	2
  1009  00099E  26DE               	addwf	postinc2,f,c
  1010  0009A0  CFDF F05B          	movff	indf2,??_vfpfcnvrt+1
  1011  0009A4  0E00               	movlw	0
  1012  0009A6  22DD               	addwfc	postdec2,f,c
  1013  0009A8  C05A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1014  0009AC  C05B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1015  0009B0  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  1016  0009B4  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  1017  0009B8  0100               	movlb	0	; () banked
  1018  0009BA  0E00               	movlw	0
  1019  0009BC  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1020  0009BE  0EFF               	movlw	-1
  1021  0009C0  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1022  0009C2  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1023  0009C4  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1024  0009C6  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1025  0009C8  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1026  0009CA  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1027  0009CC                     
  1028                           ; BSR set to: 0
  1029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1030  0009CC  C0CA  F036         	movff	vfpfcnvrt@fp,dtoa@fp
  1031  0009D0  C0CB  F037         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1032  0009D4  C0D0  F038         	movff	vfpfcnvrt@ll,dtoa@d
  1033  0009D8  C0D1  F039         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1034  0009DC  C0D2  F03A         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1035  0009E0  C0D3  F03B         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1036  0009E4  C0D4  F03C         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1037  0009E8  C0D5  F03D         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1038  0009EC  C0D6  F03E         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1039  0009F0  C0D7  F03F         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1040  0009F4  EC0B  F003         	call	_dtoa	;wreg free
  1041  0009F8  C036  F0CA         	movff	?_dtoa,?_vfpfcnvrt
  1042  0009FC  C037  F0CB         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1043  000A00  EF55  F005         	goto	l911
  1044  000A04                     l2052:
  1045                           
  1046                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1047  000A04  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1048  000A08  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1049  000A0C  CFDE FFF6          	movff	postinc2,tblptrl
  1050  000A10  CFDD FFF7          	movff	postdec2,tblptrh
  1051  000A14                     	if	0	;tblptru may be non-zero
  1052  000A14                     	endif
  1053  000A14                     	if	0	;tblptru may be non-zero
  1054  000A14                     	endif
  1055  000A14  0008               	tblrd		*
  1056  000A16  50F5               	movf	tablat,w,c
  1057  000A18  0A25               	xorlw	37
  1058  000A1A  A4D8               	btfss	status,2,c
  1059  000A1C  EF12  F005         	goto	u1731
  1060  000A20  EF14  F005         	goto	u1730
  1061  000A24                     u1731:
  1062  000A24  EF2C  F005         	goto	l2062
  1063  000A28                     u1730:
  1064  000A28                     
  1065                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1066  000A28  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1067  000A2C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1068  000A30  2ADE               	incf	postinc2,f,c
  1069  000A32  0E00               	movlw	0
  1070  000A34  22DD               	addwfc	postdec2,f,c
  1071  000A36                     
  1072                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1073  000A36  0E00               	movlw	0
  1074  000A38  6E1C               	movwf	(fputc@c+1)^0,c
  1075  000A3A  0E25               	movlw	37
  1076  000A3C  6E1B               	movwf	fputc@c^0,c
  1077  000A3E  C0CA  F01D         	movff	vfpfcnvrt@fp,fputc@fp
  1078  000A42  C0CB  F01E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1079  000A46  ECCC  F006         	call	_fputc	;wreg free
  1080  000A4A                     l2058:
  1081                           
  1082                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1083  000A4A  0E00               	movlw	0
  1084  000A4C  0100               	movlb	0	; () banked
  1085  000A4E  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1086  000A50  0E01               	movlw	1
  1087  000A52  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  1088  000A54  EF55  F005         	goto	l911
  1089  000A58                     l2062:
  1090                           
  1091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1092  000A58  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1093  000A5C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1094  000A60  2ADE               	incf	postinc2,f,c
  1095  000A62  0E00               	movlw	0
  1096  000A64  22DD               	addwfc	postdec2,f,c
  1097  000A66                     
  1098                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1099  000A66  0E00               	movlw	0
  1100  000A68  0100               	movlb	0	; () banked
  1101  000A6A  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1102  000A6C  0E00               	movlw	0
  1103  000A6E  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  1104  000A70  EF55  F005         	goto	l911
  1105  000A74                     l2068:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1108  000A74  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1109  000A78  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1110  000A7C  CFDE FFF6          	movff	postinc2,tblptrl
  1111  000A80  CFDD FFF7          	movff	postdec2,tblptrh
  1112  000A84                     	if	0	;tblptru may be non-zero
  1113  000A84                     	endif
  1114  000A84                     	if	0	;tblptru may be non-zero
  1115  000A84                     	endif
  1116  000A84  0008               	tblrd		*
  1117  000A86  50F5               	movf	tablat,w,c
  1118  000A88  6E1B               	movwf	fputc@c^0,c
  1119  000A8A  6A1C               	clrf	(fputc@c+1)^0,c
  1120  000A8C  C0CA  F01D         	movff	vfpfcnvrt@fp,fputc@fp
  1121  000A90  C0CB  F01E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1122  000A94  ECCC  F006         	call	_fputc	;wreg free
  1123  000A98                     
  1124                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1125  000A98  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1126  000A9C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1127  000AA0  2ADE               	incf	postinc2,f,c
  1128  000AA2  0E00               	movlw	0
  1129  000AA4  22DD               	addwfc	postdec2,f,c
  1130  000AA6  EF25  F005         	goto	l2058
  1131  000AAA                     l911:
  1132  000AAA  0012               	return		;funcret
  1133  000AAC                     __end_of_vfpfcnvrt:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _dtoa *****************
  1137 ;; Defined at:
  1138 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
  1141 ;;		 -> sprintf@f(6), 
  1142 ;;  d               8   55[COMRAM] long long 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  n               8   79[COMRAM] long long 
  1145 ;;  i               2   87[COMRAM] int 
  1146 ;;  s               2   77[COMRAM] int 
  1147 ;;  w               2   75[COMRAM] int 
  1148 ;;  p               2   73[COMRAM] int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   53[COMRAM] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1158 ;;      Params:        10       0       0       0       0       0       0
  1159 ;;      Locals:        18       0       0       0       0       0       0
  1160 ;;      Temps:          8       0       0       0       0       0       0
  1161 ;;      Totals:        36       0       0       0       0       0       0
  1162 ;;Total ram usage:       36 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:   10
  1165 ;; This function calls:
  1166 ;;		___aodiv
  1167 ;;		___aomod
  1168 ;;		_abs
  1169 ;;		_pad
  1170 ;; This function is called by:
  1171 ;;		_vfpfcnvrt
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text5
  1176  000616                     __ptext5:
  1177                           	callstack 0
  1178  000616                     _dtoa:
  1179                           	callstack 16
  1180  000616                     
  1181                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1182  000616  C038  F050         	movff	dtoa@d,dtoa@n
  1183  00061A  C039  F051         	movff	dtoa@d+1,dtoa@n+1
  1184  00061E  C03A  F052         	movff	dtoa@d+2,dtoa@n+2
  1185  000622  C03B  F053         	movff	dtoa@d+3,dtoa@n+3
  1186  000626  C03C  F054         	movff	dtoa@d+4,dtoa@n+4
  1187  00062A  C03D  F055         	movff	dtoa@d+5,dtoa@n+5
  1188  00062E  C03E  F056         	movff	dtoa@d+6,dtoa@n+6
  1189  000632  C03F  F057         	movff	dtoa@d+7,dtoa@n+7
  1190  000636                     
  1191                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1192  000636  BE57               	btfsc	(dtoa@n+7)^0,7,c
  1193  000638  EF20  F003         	goto	u1551
  1194  00063C  EF23  F003         	goto	u1550
  1195  000640                     u1551:
  1196  000640  0E01               	movlw	1
  1197  000642  EF24  F003         	goto	u1560
  1198  000646                     u1550:
  1199  000646  0E00               	movlw	0
  1200  000648                     u1560:
  1201  000648  6E4E               	movwf	dtoa@s^0,c
  1202  00064A  6A4F               	clrf	(dtoa@s+1)^0,c
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1205  00064C  504E               	movf	dtoa@s^0,w,c
  1206  00064E  104F               	iorwf	(dtoa@s+1)^0,w,c
  1207  000650  B4D8               	btfsc	status,2,c
  1208  000652  EF2D  F003         	goto	u1571
  1209  000656  EF2F  F003         	goto	u1570
  1210  00065A                     u1571:
  1211  00065A  EF3F  F003         	goto	l1978
  1212  00065E                     u1570:
  1213  00065E                     
  1214                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1215  00065E  1E57               	comf	(dtoa@n+7)^0,f,c
  1216  000660  1E56               	comf	(dtoa@n+6)^0,f,c
  1217  000662  1E55               	comf	(dtoa@n+5)^0,f,c
  1218  000664  1E54               	comf	(dtoa@n+4)^0,f,c
  1219  000666  1E53               	comf	(dtoa@n+3)^0,f,c
  1220  000668  1E52               	comf	(dtoa@n+2)^0,f,c
  1221  00066A  1E51               	comf	(dtoa@n+1)^0,f,c
  1222  00066C  6C50               	negf	dtoa@n^0,c
  1223  00066E  0E00               	movlw	0
  1224  000670  2251               	addwfc	(dtoa@n+1)^0,f,c
  1225  000672  2252               	addwfc	(dtoa@n+2)^0,f,c
  1226  000674  2253               	addwfc	(dtoa@n+3)^0,f,c
  1227  000676  2254               	addwfc	(dtoa@n+4)^0,f,c
  1228  000678  2255               	addwfc	(dtoa@n+5)^0,f,c
  1229  00067A  2256               	addwfc	(dtoa@n+6)^0,f,c
  1230  00067C  2257               	addwfc	(dtoa@n+7)^0,f,c
  1231  00067E                     l1978:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1234  00067E  BE60               	btfsc	(_prec+1)^0,7,c
  1235  000680  EF44  F003         	goto	u1581
  1236  000684  EF46  F003         	goto	u1580
  1237  000688                     u1581:
  1238  000688  EF47  F003         	goto	l1982
  1239  00068C                     u1580:
  1240  00068C                     
  1241                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1242  00068C  9261               	bcf	_flags^0,1,c
  1243  00068E                     l1982:
  1244                           
  1245                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1246  00068E  BE60               	btfsc	(_prec+1)^0,7,c
  1247  000690  EF54  F003         	goto	u1590
  1248  000694  5060               	movf	(_prec+1)^0,w,c
  1249  000696  E106               	bnz	u1591
  1250  000698  045F               	decf	_prec^0,w,c
  1251  00069A  B0D8               	btfsc	status,0,c
  1252  00069C  EF52  F003         	goto	u1591
  1253  0006A0  EF54  F003         	goto	u1590
  1254  0006A4                     u1591:
  1255  0006A4  EF5A  F003         	goto	l884
  1256  0006A8                     u1590:
  1257  0006A8  0E00               	movlw	0
  1258  0006AA  6E4B               	movwf	(dtoa@p+1)^0,c
  1259  0006AC  0E01               	movlw	1
  1260  0006AE  6E4A               	movwf	dtoa@p^0,c
  1261  0006B0  EF5E  F003         	goto	l886
  1262  0006B4                     l884:
  1263  0006B4  C05F  F04A         	movff	_prec,dtoa@p
  1264  0006B8  C060  F04B         	movff	_prec+1,dtoa@p+1
  1265  0006BC                     l886:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1268  0006BC  C05D  F04C         	movff	_width,dtoa@w
  1269  0006C0  C05E  F04D         	movff	_width+1,dtoa@w+1
  1270  0006C4                     
  1271                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1272  0006C4  504E               	movf	dtoa@s^0,w,c
  1273  0006C6  104F               	iorwf	(dtoa@s+1)^0,w,c
  1274  0006C8  A4D8               	btfss	status,2,c
  1275  0006CA  EF69  F003         	goto	u1601
  1276  0006CE  EF6B  F003         	goto	u1600
  1277  0006D2                     u1601:
  1278  0006D2  EF72  F003         	goto	l1990
  1279  0006D6                     u1600:
  1280  0006D6  A461               	btfss	_flags^0,2,c
  1281  0006D8  EF70  F003         	goto	u1611
  1282  0006DC  EF72  F003         	goto	u1610
  1283  0006E0                     u1611:
  1284  0006E0  EF75  F003         	goto	l1992
  1285  0006E4                     u1610:
  1286  0006E4                     l1990:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  1289  0006E4  064C               	decf	dtoa@w^0,f,c
  1290  0006E6  A0D8               	btfss	status,0,c
  1291  0006E8  064D               	decf	(dtoa@w+1)^0,f,c
  1292  0006EA                     l1992:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1295  0006EA  0E00               	movlw	0
  1296  0006EC  6E59               	movwf	(dtoa@i+1)^0,c
  1297  0006EE  0E1F               	movlw	31
  1298  0006F0  6E58               	movwf	dtoa@i^0,c
  1299  0006F2                     
  1300                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1301  0006F2  0E00               	movlw	0
  1302  0006F4  0100               	movlb	0	; () banked
  1303  0006F6  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1304                           
  1305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1306  0006F8  EFFA  F003         	goto	l2006
  1307  0006FC                     l1996:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  1310  0006FC  0658               	decf	dtoa@i^0,f,c
  1311  0006FE  A0D8               	btfss	status,0,c
  1312  000700  0659               	decf	(dtoa@i+1)^0,f,c
  1313  000702                     
  1314                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1315  000702  0E96               	movlw	low _dbuf
  1316  000704  2458               	addwf	dtoa@i^0,w,c
  1317  000706  6ED9               	movwf	fsr2l,c
  1318  000708  0E00               	movlw	high _dbuf
  1319  00070A  2059               	addwfc	(dtoa@i+1)^0,w,c
  1320  00070C  6EDA               	movwf	fsr2h,c
  1321  00070E  C050  F01B         	movff	dtoa@n,___aomod@dividend
  1322  000712  C051  F01C         	movff	dtoa@n+1,___aomod@dividend+1
  1323  000716  C052  F01D         	movff	dtoa@n+2,___aomod@dividend+2
  1324  00071A  C053  F01E         	movff	dtoa@n+3,___aomod@dividend+3
  1325  00071E  C054  F01F         	movff	dtoa@n+4,___aomod@dividend+4
  1326  000722  C055  F020         	movff	dtoa@n+5,___aomod@dividend+5
  1327  000726  C056  F021         	movff	dtoa@n+6,___aomod@dividend+6
  1328  00072A  C057  F022         	movff	dtoa@n+7,___aomod@dividend+7
  1329  00072E  0E0A               	movlw	10
  1330  000730  6E23               	movwf	___aomod@divisor^0,c
  1331  000732  0E00               	movlw	0
  1332  000734  6E24               	movwf	(___aomod@divisor+1)^0,c
  1333  000736  0E00               	movlw	0
  1334  000738  6E25               	movwf	(___aomod@divisor+2)^0,c
  1335  00073A  0E00               	movlw	0
  1336  00073C  6E26               	movwf	(___aomod@divisor+3)^0,c
  1337  00073E  0E00               	movlw	0
  1338  000740  6E27               	movwf	(___aomod@divisor+4)^0,c
  1339  000742  0E00               	movlw	0
  1340  000744  6E28               	movwf	(___aomod@divisor+5)^0,c
  1341  000746  0E00               	movlw	0
  1342  000748  6E29               	movwf	(___aomod@divisor+6)^0,c
  1343  00074A  0E00               	movlw	0
  1344  00074C  6E2A               	movwf	(___aomod@divisor+7)^0,c
  1345  00074E  EC1A  F006         	call	___aomod	;wreg free
  1346  000752  C01B  F040         	movff	?___aomod,??_dtoa
  1347  000756  C01C  F041         	movff	?___aomod+1,??_dtoa+1
  1348  00075A  C01D  F042         	movff	?___aomod+2,??_dtoa+2
  1349  00075E  C01E  F043         	movff	?___aomod+3,??_dtoa+3
  1350  000762  C01F  F044         	movff	?___aomod+4,??_dtoa+4
  1351  000766  C020  F045         	movff	?___aomod+5,??_dtoa+5
  1352  00076A  C021  F046         	movff	?___aomod+6,??_dtoa+6
  1353  00076E  C022  F047         	movff	?___aomod+7,??_dtoa+7
  1354  000772  C040  F02D         	movff	??_dtoa,abs@a
  1355  000776  C042  F02E         	movff	??_dtoa+2,abs@a+1
  1356  00077A  ECBF  F009         	call	_abs	;wreg free
  1357  00077E  502D               	movf	?_abs^0,w,c
  1358  000780  0F30               	addlw	48
  1359  000782  6EDF               	movwf	indf2,c
  1360  000784                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  1362  000784  064A               	decf	dtoa@p^0,f,c
  1363  000786  A0D8               	btfss	status,0,c
  1364  000788  064B               	decf	(dtoa@p+1)^0,f,c
  1365  00078A                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  1367  00078A  064C               	decf	dtoa@w^0,f,c
  1368  00078C  A0D8               	btfss	status,0,c
  1369  00078E  064D               	decf	(dtoa@w+1)^0,f,c
  1370  000790                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1372  000790  C050  F01B         	movff	dtoa@n,___aodiv@dividend
  1373  000794  C051  F01C         	movff	dtoa@n+1,___aodiv@dividend+1
  1374  000798  C052  F01D         	movff	dtoa@n+2,___aodiv@dividend+2
  1375  00079C  C053  F01E         	movff	dtoa@n+3,___aodiv@dividend+3
  1376  0007A0  C054  F01F         	movff	dtoa@n+4,___aodiv@dividend+4
  1377  0007A4  C055  F020         	movff	dtoa@n+5,___aodiv@dividend+5
  1378  0007A8  C056  F021         	movff	dtoa@n+6,___aodiv@dividend+6
  1379  0007AC  C057  F022         	movff	dtoa@n+7,___aodiv@dividend+7
  1380  0007B0  0E0A               	movlw	10
  1381  0007B2  6E23               	movwf	___aodiv@divisor^0,c
  1382  0007B4  0E00               	movlw	0
  1383  0007B6  6E24               	movwf	(___aodiv@divisor+1)^0,c
  1384  0007B8  0E00               	movlw	0
  1385  0007BA  6E25               	movwf	(___aodiv@divisor+2)^0,c
  1386  0007BC  0E00               	movlw	0
  1387  0007BE  6E26               	movwf	(___aodiv@divisor+3)^0,c
  1388  0007C0  0E00               	movlw	0
  1389  0007C2  6E27               	movwf	(___aodiv@divisor+4)^0,c
  1390  0007C4  0E00               	movlw	0
  1391  0007C6  6E28               	movwf	(___aodiv@divisor+5)^0,c
  1392  0007C8  0E00               	movlw	0
  1393  0007CA  6E29               	movwf	(___aodiv@divisor+6)^0,c
  1394  0007CC  0E00               	movlw	0
  1395  0007CE  6E2A               	movwf	(___aodiv@divisor+7)^0,c
  1396  0007D0  EC56  F005         	call	___aodiv	;wreg free
  1397  0007D4  C01B  F050         	movff	?___aodiv,dtoa@n
  1398  0007D8  C01C  F051         	movff	?___aodiv+1,dtoa@n+1
  1399  0007DC  C01D  F052         	movff	?___aodiv+2,dtoa@n+2
  1400  0007E0  C01E  F053         	movff	?___aodiv+3,dtoa@n+3
  1401  0007E4  C01F  F054         	movff	?___aodiv+4,dtoa@n+4
  1402  0007E8  C020  F055         	movff	?___aodiv+5,dtoa@n+5
  1403  0007EC  C021  F056         	movff	?___aodiv+6,dtoa@n+6
  1404  0007F0  C022  F057         	movff	?___aodiv+7,dtoa@n+7
  1405  0007F4                     l2006:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1408  0007F4  BE59               	btfsc	(dtoa@i+1)^0,7,c
  1409  0007F6  EF05  F004         	goto	u1621
  1410  0007FA  5059               	movf	(dtoa@i+1)^0,w,c
  1411  0007FC  E108               	bnz	u1620
  1412  0007FE  0458               	decf	dtoa@i^0,w,c
  1413  000800  A0D8               	btfss	status,0,c
  1414  000802  EF05  F004         	goto	u1621
  1415  000806  EF07  F004         	goto	u1620
  1416  00080A                     u1621:
  1417  00080A  EF37  F004         	goto	l2016
  1418  00080E                     u1620:
  1419  00080E  5050               	movf	dtoa@n^0,w,c
  1420  000810  1051               	iorwf	(dtoa@n+1)^0,w,c
  1421  000812  1052               	iorwf	(dtoa@n+2)^0,w,c
  1422  000814  1053               	iorwf	(dtoa@n+3)^0,w,c
  1423  000816  1054               	iorwf	(dtoa@n+4)^0,w,c
  1424  000818  1055               	iorwf	(dtoa@n+5)^0,w,c
  1425  00081A  1056               	iorwf	(dtoa@n+6)^0,w,c
  1426  00081C  1057               	iorwf	(dtoa@n+7)^0,w,c
  1427  00081E  A4D8               	btfss	status,2,c
  1428  000820  EF14  F004         	goto	u1631
  1429  000824  EF16  F004         	goto	u1630
  1430  000828                     u1631:
  1431  000828  EF7E  F003         	goto	l1996
  1432  00082C                     u1630:
  1433  00082C  BE4B               	btfsc	(dtoa@p+1)^0,7,c
  1434  00082E  EF23  F004         	goto	u1640
  1435  000832  504B               	movf	(dtoa@p+1)^0,w,c
  1436  000834  E106               	bnz	u1641
  1437  000836  044A               	decf	dtoa@p^0,w,c
  1438  000838  B0D8               	btfsc	status,0,c
  1439  00083A  EF21  F004         	goto	u1641
  1440  00083E  EF23  F004         	goto	u1640
  1441  000842                     u1641:
  1442  000842  EF7E  F003         	goto	l1996
  1443  000846                     u1640:
  1444  000846  BE4D               	btfsc	(dtoa@w+1)^0,7,c
  1445  000848  EF2E  F004         	goto	u1651
  1446  00084C  504D               	movf	(dtoa@w+1)^0,w,c
  1447  00084E  E108               	bnz	u1650
  1448  000850  044C               	decf	dtoa@w^0,w,c
  1449  000852  A0D8               	btfss	status,0,c
  1450  000854  EF2E  F004         	goto	u1651
  1451  000858  EF30  F004         	goto	u1650
  1452  00085C                     u1651:
  1453  00085C  EF37  F004         	goto	l2016
  1454  000860                     u1650:
  1455  000860  B261               	btfsc	_flags^0,1,c
  1456  000862  EF35  F004         	goto	u1661
  1457  000866  EF37  F004         	goto	u1660
  1458  00086A                     u1661:
  1459  00086A  EF7E  F003         	goto	l1996
  1460  00086E                     u1660:
  1461  00086E                     l2016:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1464  00086E  504E               	movf	dtoa@s^0,w,c
  1465  000870  104F               	iorwf	(dtoa@s+1)^0,w,c
  1466  000872  A4D8               	btfss	status,2,c
  1467  000874  EF3E  F004         	goto	u1671
  1468  000878  EF40  F004         	goto	u1670
  1469  00087C                     u1671:
  1470  00087C  EF47  F004         	goto	l2020
  1471  000880                     u1670:
  1472  000880  A461               	btfss	_flags^0,2,c
  1473  000882  EF45  F004         	goto	u1681
  1474  000886  EF47  F004         	goto	u1680
  1475  00088A                     u1681:
  1476  00088A  EF65  F004         	goto	l2030
  1477  00088E                     u1680:
  1478  00088E                     l2020:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  1481  00088E  0658               	decf	dtoa@i^0,f,c
  1482  000890  A0D8               	btfss	status,0,c
  1483  000892  0659               	decf	(dtoa@i+1)^0,f,c
  1484  000894                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1486  000894  504E               	movf	dtoa@s^0,w,c
  1487  000896  104F               	iorwf	(dtoa@s+1)^0,w,c
  1488  000898  A4D8               	btfss	status,2,c
  1489  00089A  EF51  F004         	goto	u1691
  1490  00089E  EF53  F004         	goto	u1690
  1491  0008A2                     u1691:
  1492  0008A2  EF59  F004         	goto	l2026
  1493  0008A6                     u1690:
  1494  0008A6  0E00               	movlw	0
  1495  0008A8  6E49               	movwf	(_dtoa$1358+1)^0,c
  1496  0008AA  0E2B               	movlw	43
  1497  0008AC  6E48               	movwf	_dtoa$1358^0,c
  1498  0008AE  EF5D  F004         	goto	l2028
  1499  0008B2                     l2026:
  1500  0008B2  0E00               	movlw	0
  1501  0008B4  6E49               	movwf	(_dtoa$1358+1)^0,c
  1502  0008B6  0E2D               	movlw	45
  1503  0008B8  6E48               	movwf	_dtoa$1358^0,c
  1504  0008BA                     l2028:
  1505  0008BA  0E96               	movlw	low _dbuf
  1506  0008BC  2458               	addwf	dtoa@i^0,w,c
  1507  0008BE  6ED9               	movwf	fsr2l,c
  1508  0008C0  0E00               	movlw	high _dbuf
  1509  0008C2  2059               	addwfc	(dtoa@i+1)^0,w,c
  1510  0008C4  6EDA               	movwf	fsr2h,c
  1511  0008C6  C048  FFDF         	movff	_dtoa$1358,indf2
  1512  0008CA                     l2030:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1515  0008CA  C036  F02B         	movff	dtoa@fp,pad@fp
  1516  0008CE  C037  F02C         	movff	dtoa@fp+1,pad@fp+1
  1517  0008D2  0E96               	movlw	low _dbuf
  1518  0008D4  2458               	addwf	dtoa@i^0,w,c
  1519  0008D6  6E2D               	movwf	pad@buf^0,c
  1520  0008D8  0E00               	movlw	high _dbuf
  1521  0008DA  2059               	addwfc	(dtoa@i+1)^0,w,c
  1522  0008DC  6E2E               	movwf	(pad@buf+1)^0,c
  1523  0008DE  C04C  F02F         	movff	dtoa@w,pad@p
  1524  0008E2  C04D  F030         	movff	dtoa@w+1,pad@p+1
  1525  0008E6  EC31  F007         	call	_pad	;wreg free
  1526  0008EA  C02B  F036         	movff	?_pad,?_dtoa
  1527  0008EE  C02C  F037         	movff	?_pad+1,?_dtoa+1
  1528  0008F2  0012               	return		;funcret
  1529  0008F4                     __end_of_dtoa:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _pad *****************
  1533 ;; Defined at:
  1534 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  1537 ;;		 -> sprintf@f(6), 
  1538 ;;  buf             2   44[COMRAM] PTR unsigned char 
  1539 ;;		 -> dbuf(32), 
  1540 ;;  p               2   46[COMRAM] int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  w               2   51[COMRAM] int 
  1543 ;;  i               2   49[COMRAM] int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2   42[COMRAM] int 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1553 ;;      Params:         6       0       0       0       0       0       0
  1554 ;;      Locals:         4       0       0       0       0       0       0
  1555 ;;      Temps:          1       0       0       0       0       0       0
  1556 ;;      Totals:        11       0       0       0       0       0       0
  1557 ;;Total ram usage:       11 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    9
  1560 ;; This function calls:
  1561 ;;		_fputc
  1562 ;;		_fputs
  1563 ;;		_strlen
  1564 ;; This function is called by:
  1565 ;;		_dtoa
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text6
  1570  000E62                     __ptext6:
  1571                           	callstack 0
  1572  000E62                     _pad:
  1573                           	callstack 16
  1574  000E62                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1576  000E62  A061               	btfss	_flags^0,0,c
  1577  000E64  EF36  F007         	goto	u1501
  1578  000E68  EF38  F007         	goto	u1500
  1579  000E6C                     u1501:
  1580  000E6C  EF42  F007         	goto	l1950
  1581  000E70                     u1500:
  1582  000E70                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1584  000E70  C02D  F024         	movff	pad@buf,fputs@s
  1585  000E74  C02E  F025         	movff	pad@buf+1,fputs@s+1
  1586  000E78  C02B  F026         	movff	pad@fp,fputs@fp
  1587  000E7C  C02C  F027         	movff	pad@fp+1,fputs@fp+1
  1588  000E80  EC17  F009         	call	_fputs	;wreg free
  1589  000E84                     l1950:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1592  000E84  BE30               	btfsc	(pad@p+1)^0,7,c
  1593  000E86  EF47  F007         	goto	u1511
  1594  000E8A  EF49  F007         	goto	u1510
  1595  000E8E                     u1511:
  1596  000E8E  EF4F  F007         	goto	l1954
  1597  000E92                     u1510:
  1598  000E92  C02F  F034         	movff	pad@p,pad@w
  1599  000E96  C030  F035         	movff	pad@p+1,pad@w+1
  1600  000E9A  EF53  F007         	goto	l873
  1601  000E9E                     l1954:
  1602  000E9E  0E00               	movlw	0
  1603  000EA0  6E35               	movwf	(pad@w+1)^0,c
  1604  000EA2  0E00               	movlw	0
  1605  000EA4  6E34               	movwf	pad@w^0,c
  1606  000EA6                     l873:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1609  000EA6  0E00               	movlw	0
  1610  000EA8  6E33               	movwf	(pad@i+1)^0,c
  1611  000EAA  0E00               	movlw	0
  1612  000EAC  6E32               	movwf	pad@i^0,c
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1615  000EAE  EF65  F007         	goto	l1960
  1616  000EB2                     l1956:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1619  000EB2  0E00               	movlw	0
  1620  000EB4  6E1C               	movwf	(fputc@c+1)^0,c
  1621  000EB6  0E20               	movlw	32
  1622  000EB8  6E1B               	movwf	fputc@c^0,c
  1623  000EBA  C02B  F01D         	movff	pad@fp,fputc@fp
  1624  000EBE  C02C  F01E         	movff	pad@fp+1,fputc@fp+1
  1625  000EC2  ECCC  F006         	call	_fputc	;wreg free
  1626  000EC6                     
  1627                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1628  000EC6  4A32               	infsnz	pad@i^0,f,c
  1629  000EC8  2A33               	incf	(pad@i+1)^0,f,c
  1630  000ECA                     l1960:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1633  000ECA  5034               	movf	pad@w^0,w,c
  1634  000ECC  5C32               	subwf	pad@i^0,w,c
  1635  000ECE  5033               	movf	(pad@i+1)^0,w,c
  1636  000ED0  0A80               	xorlw	128
  1637  000ED2  6E31               	movwf	??_pad^0,c
  1638  000ED4  5035               	movf	(pad@w+1)^0,w,c
  1639  000ED6  0A80               	xorlw	128
  1640  000ED8  5831               	subwfb	??_pad^0,w,c
  1641  000EDA  A0D8               	btfss	status,0,c
  1642  000EDC  EF72  F007         	goto	u1521
  1643  000EE0  EF74  F007         	goto	u1520
  1644  000EE4                     u1521:
  1645  000EE4  EF59  F007         	goto	l1956
  1646  000EE8                     u1520:
  1647  000EE8                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1649  000EE8  B061               	btfsc	_flags^0,0,c
  1650  000EEA  EF79  F007         	goto	u1531
  1651  000EEE  EF7B  F007         	goto	u1530
  1652  000EF2                     u1531:
  1653  000EF2  EF85  F007         	goto	l1964
  1654  000EF6                     u1530:
  1655  000EF6                     
  1656                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1657  000EF6  C02D  F024         	movff	pad@buf,fputs@s
  1658  000EFA  C02E  F025         	movff	pad@buf+1,fputs@s+1
  1659  000EFE  C02B  F026         	movff	pad@fp,fputs@fp
  1660  000F02  C02C  F027         	movff	pad@fp+1,fputs@fp+1
  1661  000F06  EC17  F009         	call	_fputs	;wreg free
  1662  000F0A                     l1964:
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1665  000F0A  C02D  F01B         	movff	pad@buf,strlen@s
  1666  000F0E  C02E  F01C         	movff	pad@buf+1,strlen@s+1
  1667  000F12  ECDF  F009         	call	_strlen	;wreg free
  1668  000F16  5034               	movf	pad@w^0,w,c
  1669  000F18  241B               	addwf	?_strlen^0,w,c
  1670  000F1A  6E2B               	movwf	?_pad^0,c
  1671  000F1C  5035               	movf	(pad@w+1)^0,w,c
  1672  000F1E  201C               	addwfc	(?_strlen+1)^0,w,c
  1673  000F20  6E2C               	movwf	(?_pad+1)^0,c
  1674  000F22  0012               	return		;funcret
  1675  000F24                     __end_of_pad:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _strlen *****************
  1679 ;; Defined at:
  1680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  s               2   26[COMRAM] PTR const unsigned char 
  1683 ;;		 -> dbuf(32), 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  a               2   28[COMRAM] PTR const unsigned char 
  1686 ;;		 -> dbuf(32), 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2   26[COMRAM] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         2       0       0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         4       0       0       0       0       0       0
  1700 ;;Total ram usage:        4 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    6
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_pad
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text7
  1711  0013BE                     __ptext7:
  1712                           	callstack 0
  1713  0013BE                     _strlen:
  1714                           	callstack 18
  1715  0013BE  C01B  F01D         	movff	strlen@s,strlen@a
  1716  0013C2  C01C  F01E         	movff	strlen@s+1,strlen@a+1
  1717  0013C6  EFE7  F009         	goto	l1860
  1718  0013CA                     l1858:
  1719  0013CA  4A1B               	infsnz	strlen@s^0,f,c
  1720  0013CC  2A1C               	incf	(strlen@s+1)^0,f,c
  1721  0013CE                     l1860:
  1722  0013CE  C01B  FFD9         	movff	strlen@s,fsr2l
  1723  0013D2  C01C  FFDA         	movff	strlen@s+1,fsr2h
  1724  0013D6  50DF               	movf	indf2,w,c
  1725  0013D8  A4D8               	btfss	status,2,c
  1726  0013DA  EFF1  F009         	goto	u1361
  1727  0013DE  EFF3  F009         	goto	u1360
  1728  0013E2                     u1361:
  1729  0013E2  EFE5  F009         	goto	l1858
  1730  0013E6                     u1360:
  1731  0013E6  501D               	movf	strlen@a^0,w,c
  1732  0013E8  5C1B               	subwf	strlen@s^0,w,c
  1733  0013EA  6E1B               	movwf	?_strlen^0,c
  1734  0013EC  501E               	movf	(strlen@a+1)^0,w,c
  1735  0013EE  581C               	subwfb	(strlen@s+1)^0,w,c
  1736  0013F0  6E1C               	movwf	(?_strlen+1)^0,c
  1737  0013F2  0012               	return		;funcret
  1738  0013F4                     __end_of_strlen:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _fputs *****************
  1742 ;; Defined at:
  1743 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  s               2   35[COMRAM] PTR const unsigned char 
  1746 ;;		 -> dbuf(32), 
  1747 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  1748 ;;		 -> sprintf@f(6), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  i               2   40[COMRAM] int 
  1751 ;;  c               1   39[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2   35[COMRAM] int 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         4       0       0       0       0       0       0
  1762 ;;      Locals:         3       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0
  1764 ;;      Totals:         7       0       0       0       0       0       0
  1765 ;;Total ram usage:        7 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    8
  1768 ;; This function calls:
  1769 ;;		_fputc
  1770 ;; This function is called by:
  1771 ;;		_pad
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text8
  1776  00122E                     __ptext8:
  1777                           	callstack 0
  1778  00122E                     _fputs:
  1779                           	callstack 16
  1780  00122E  0E00               	movlw	0
  1781  001230  6E2A               	movwf	(fputs@i+1)^0,c
  1782  001232  0E00               	movlw	0
  1783  001234  6E29               	movwf	fputs@i^0,c
  1784  001236  EF28  F009         	goto	l1854
  1785  00123A                     l1850:
  1786  00123A  C028  F01B         	movff	fputs@c,fputc@c
  1787  00123E  6A1C               	clrf	(fputc@c+1)^0,c
  1788  001240  C026  F01D         	movff	fputs@fp,fputc@fp
  1789  001244  C027  F01E         	movff	fputs@fp+1,fputc@fp+1
  1790  001248  ECCC  F006         	call	_fputc	;wreg free
  1791  00124C  4A29               	infsnz	fputs@i^0,f,c
  1792  00124E  2A2A               	incf	(fputs@i+1)^0,f,c
  1793  001250                     l1854:
  1794  001250  5029               	movf	fputs@i^0,w,c
  1795  001252  2424               	addwf	fputs@s^0,w,c
  1796  001254  6ED9               	movwf	fsr2l,c
  1797  001256  502A               	movf	(fputs@i+1)^0,w,c
  1798  001258  2025               	addwfc	(fputs@s+1)^0,w,c
  1799  00125A  6EDA               	movwf	fsr2h,c
  1800  00125C  50DF               	movf	indf2,w,c
  1801  00125E  6E28               	movwf	fputs@c^0,c
  1802  001260  5028               	movf	fputs@c^0,w,c
  1803  001262  A4D8               	btfss	status,2,c
  1804  001264  EF36  F009         	goto	u1351
  1805  001268  EF38  F009         	goto	u1350
  1806  00126C                     u1351:
  1807  00126C  EF1D  F009         	goto	l1850
  1808  001270                     u1350:
  1809  001270  0012               	return		;funcret
  1810  001272                     __end_of_fputs:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _fputc *****************
  1814 ;; Defined at:
  1815 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  c               2   26[COMRAM] int 
  1818 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1819 ;;		 -> sprintf@f(6), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  2   26[COMRAM] int 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1831 ;;      Params:         4       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0
  1833 ;;      Temps:          5       0       0       0       0       0       0
  1834 ;;      Totals:         9       0       0       0       0       0       0
  1835 ;;Total ram usage:        9 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    7
  1838 ;; This function calls:
  1839 ;;		_putch
  1840 ;; This function is called by:
  1841 ;;		_pad
  1842 ;;		_vfpfcnvrt
  1843 ;;		_fputs
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text9
  1848  000D98                     __ptext9:
  1849                           	callstack 0
  1850  000D98                     _fputc:
  1851                           	callstack 19
  1852  000D98  501D               	movf	fputc@fp^0,w,c
  1853  000D9A  101E               	iorwf	(fputc@fp+1)^0,w,c
  1854  000D9C  B4D8               	btfsc	status,2,c
  1855  000D9E  EFD3  F006         	goto	u1311
  1856  000DA2  EFD5  F006         	goto	u1310
  1857  000DA6                     u1311:
  1858  000DA6  EFDE  F006         	goto	l1838
  1859  000DAA                     u1310:
  1860  000DAA  501D               	movf	fputc@fp^0,w,c
  1861  000DAC  101E               	iorwf	(fputc@fp+1)^0,w,c
  1862  000DAE  A4D8               	btfss	status,2,c
  1863  000DB0  EFDC  F006         	goto	u1321
  1864  000DB4  EFDE  F006         	goto	u1320
  1865  000DB8                     u1321:
  1866  000DB8  EFE3  F006         	goto	l1840
  1867  000DBC                     u1320:
  1868  000DBC                     l1838:
  1869  000DBC  501B               	movf	fputc@c^0,w,c
  1870  000DBE  EC82  F00A         	call	_putch
  1871  000DC2  EF30  F007         	goto	l937
  1872  000DC6                     l1840:
  1873  000DC6  EE20 F004          	lfsr	2,4
  1874  000DCA  501D               	movf	fputc@fp^0,w,c
  1875  000DCC  26D9               	addwf	fsr2l,f,c
  1876  000DCE  501E               	movf	(fputc@fp+1)^0,w,c
  1877  000DD0  22DA               	addwfc	fsr2h,f,c
  1878  000DD2  50DE               	movf	postinc2,w,c
  1879  000DD4  10DE               	iorwf	postinc2,w,c
  1880  000DD6  B4D8               	btfsc	status,2,c
  1881  000DD8  EFF0  F006         	goto	u1331
  1882  000DDC  EFF2  F006         	goto	u1330
  1883  000DE0                     u1331:
  1884  000DE0  EF0D  F007         	goto	l1844
  1885  000DE4                     u1330:
  1886  000DE4  EE20 F004          	lfsr	2,4
  1887  000DE8  501D               	movf	fputc@fp^0,w,c
  1888  000DEA  26D9               	addwf	fsr2l,f,c
  1889  000DEC  501E               	movf	(fputc@fp+1)^0,w,c
  1890  000DEE  22DA               	addwfc	fsr2h,f,c
  1891  000DF0  EE10 F002          	lfsr	1,2
  1892  000DF4  501D               	movf	fputc@fp^0,w,c
  1893  000DF6  26E1               	addwf	fsr1l,f,c
  1894  000DF8  501E               	movf	(fputc@fp+1)^0,w,c
  1895  000DFA  22E2               	addwfc	fsr1h,f,c
  1896  000DFC  50DE               	movf	postinc2,w,c
  1897  000DFE  5CE6               	subwf	postinc1,w,c
  1898  000E00  50E6               	movf	postinc1,w,c
  1899  000E02  0A80               	xorlw	128
  1900  000E04  6E23               	movwf	(??_fputc+4)^0,c
  1901  000E06  50DE               	movf	postinc2,w,c
  1902  000E08  0A80               	xorlw	128
  1903  000E0A  5823               	subwfb	(??_fputc+4)^0,w,c
  1904  000E0C  B0D8               	btfsc	status,0,c
  1905  000E0E  EF0B  F007         	goto	u1341
  1906  000E12  EF0D  F007         	goto	u1340
  1907  000E16                     u1341:
  1908  000E16  EF30  F007         	goto	l937
  1909  000E1A                     u1340:
  1910  000E1A                     l1844:
  1911  000E1A  EE20 F002          	lfsr	2,2
  1912  000E1E  501D               	movf	fputc@fp^0,w,c
  1913  000E20  26D9               	addwf	fsr2l,f,c
  1914  000E22  501E               	movf	(fputc@fp+1)^0,w,c
  1915  000E24  22DA               	addwfc	fsr2h,f,c
  1916  000E26  CFDE F01F          	movff	postinc2,??_fputc
  1917  000E2A  CFDD F020          	movff	postdec2,??_fputc+1
  1918  000E2E  C01D  FFD9         	movff	fputc@fp,fsr2l
  1919  000E32  C01E  FFDA         	movff	fputc@fp+1,fsr2h
  1920  000E36  CFDE F021          	movff	postinc2,??_fputc+2
  1921  000E3A  CFDD F022          	movff	postdec2,??_fputc+3
  1922  000E3E  501F               	movf	??_fputc^0,w,c
  1923  000E40  2421               	addwf	(??_fputc+2)^0,w,c
  1924  000E42  6ED9               	movwf	fsr2l,c
  1925  000E44  5020               	movf	(??_fputc+1)^0,w,c
  1926  000E46  2022               	addwfc	(??_fputc+3)^0,w,c
  1927  000E48  6EDA               	movwf	fsr2h,c
  1928  000E4A  C01B  FFDF         	movff	fputc@c,indf2
  1929  000E4E  EE20 F002          	lfsr	2,2
  1930  000E52  501D               	movf	fputc@fp^0,w,c
  1931  000E54  26D9               	addwf	fsr2l,f,c
  1932  000E56  501E               	movf	(fputc@fp+1)^0,w,c
  1933  000E58  22DA               	addwfc	fsr2h,f,c
  1934  000E5A  2ADE               	incf	postinc2,f,c
  1935  000E5C  0E00               	movlw	0
  1936  000E5E  22DD               	addwfc	postdec2,f,c
  1937  000E60                     l937:
  1938  000E60  0012               	return		;funcret
  1939  000E62                     __end_of_fputc:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _putch *****************
  1943 ;; Defined at:
  1944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  c               1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  c               1    0[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         0       0       0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    6
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_fputc
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text10
  1973  001504                     __ptext10:
  1974                           	callstack 0
  1975  001504                     _putch:
  1976                           	callstack 19
  1977  001504  0012               	return		;funcret
  1978  001506                     __end_of_putch:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _abs *****************
  1982 ;; Defined at:
  1983 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  a               2   44[COMRAM] int 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  2   44[COMRAM] int 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         2       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0
  1999 ;;      Temps:          2       0       0       0       0       0       0
  2000 ;;      Totals:         4       0       0       0       0       0       0
  2001 ;;Total ram usage:        4 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    6
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_dtoa
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text11
  2012  00137E                     __ptext11:
  2013                           	callstack 0
  2014  00137E                     _abs:
  2015                           	callstack 19
  2016  00137E  BE2E               	btfsc	(abs@a+1)^0,7,c
  2017  001380  EFCC  F009         	goto	u1540
  2018  001384  502E               	movf	(abs@a+1)^0,w,c
  2019  001386  E106               	bnz	u1541
  2020  001388  042D               	decf	abs@a^0,w,c
  2021  00138A  B0D8               	btfsc	status,0,c
  2022  00138C  EFCA  F009         	goto	u1541
  2023  001390  EFCC  F009         	goto	u1540
  2024  001394                     u1541:
  2025  001394  EFDA  F009         	goto	l922
  2026  001398                     u1540:
  2027  001398  C02D  F02F         	movff	abs@a,??_abs
  2028  00139C  C02E  F030         	movff	abs@a+1,??_abs+1
  2029  0013A0  1E2F               	comf	??_abs^0,f,c
  2030  0013A2  1E30               	comf	(??_abs+1)^0,f,c
  2031  0013A4  4A2F               	infsnz	??_abs^0,f,c
  2032  0013A6  2A30               	incf	(??_abs+1)^0,f,c
  2033  0013A8  C02F  F02D         	movff	??_abs,?_abs
  2034  0013AC  C030  F02E         	movff	??_abs+1,?_abs+1
  2035  0013B0  EFDE  F009         	goto	l925
  2036  0013B4                     l922:
  2037  0013B4  C02D  F02D         	movff	abs@a,?_abs
  2038  0013B8  C02E  F02E         	movff	abs@a+1,?_abs+1
  2039  0013BC                     l925:
  2040  0013BC  0012               	return		;funcret
  2041  0013BE                     __end_of_abs:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function ___aomod *****************
  2045 ;; Defined at:
  2046 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  dividend        8   26[COMRAM] long long 
  2049 ;;  divisor         8   34[COMRAM] long long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  sign            1   43[COMRAM] unsigned char 
  2052 ;;  counter         1   42[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  8   26[COMRAM] long long 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2062 ;;      Params:        16       0       0       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0
  2065 ;;      Totals:        18       0       0       0       0       0       0
  2066 ;;Total ram usage:       18 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    6
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_dtoa
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text12
  2077  000C34                     __ptext12:
  2078                           	callstack 0
  2079  000C34                     ___aomod:
  2080                           	callstack 19
  2081  000C34  0E00               	movlw	0
  2082  000C36  6E2C               	movwf	___aomod@sign^0,c
  2083  000C38  BE22               	btfsc	(___aomod@dividend+7)^0,7,c
  2084  000C3A  EF23  F006         	goto	u1440
  2085  000C3E  EF21  F006         	goto	u1441
  2086  000C42                     u1441:
  2087  000C42  EF35  F006         	goto	l1918
  2088  000C46                     u1440:
  2089  000C46  1E22               	comf	(___aomod@dividend+7)^0,f,c
  2090  000C48  1E21               	comf	(___aomod@dividend+6)^0,f,c
  2091  000C4A  1E20               	comf	(___aomod@dividend+5)^0,f,c
  2092  000C4C  1E1F               	comf	(___aomod@dividend+4)^0,f,c
  2093  000C4E  1E1E               	comf	(___aomod@dividend+3)^0,f,c
  2094  000C50  1E1D               	comf	(___aomod@dividend+2)^0,f,c
  2095  000C52  1E1C               	comf	(___aomod@dividend+1)^0,f,c
  2096  000C54  6C1B               	negf	___aomod@dividend^0,c
  2097  000C56  0E00               	movlw	0
  2098  000C58  221C               	addwfc	(___aomod@dividend+1)^0,f,c
  2099  000C5A  221D               	addwfc	(___aomod@dividend+2)^0,f,c
  2100  000C5C  221E               	addwfc	(___aomod@dividend+3)^0,f,c
  2101  000C5E  221F               	addwfc	(___aomod@dividend+4)^0,f,c
  2102  000C60  2220               	addwfc	(___aomod@dividend+5)^0,f,c
  2103  000C62  2221               	addwfc	(___aomod@dividend+6)^0,f,c
  2104  000C64  2222               	addwfc	(___aomod@dividend+7)^0,f,c
  2105  000C66  0E01               	movlw	1
  2106  000C68  6E2C               	movwf	___aomod@sign^0,c
  2107  000C6A                     l1918:
  2108  000C6A  BE2A               	btfsc	(___aomod@divisor+7)^0,7,c
  2109  000C6C  EF3C  F006         	goto	u1450
  2110  000C70  EF3A  F006         	goto	u1451
  2111  000C74                     u1451:
  2112  000C74  EF4C  F006         	goto	l1922
  2113  000C78                     u1450:
  2114  000C78  1E2A               	comf	(___aomod@divisor+7)^0,f,c
  2115  000C7A  1E29               	comf	(___aomod@divisor+6)^0,f,c
  2116  000C7C  1E28               	comf	(___aomod@divisor+5)^0,f,c
  2117  000C7E  1E27               	comf	(___aomod@divisor+4)^0,f,c
  2118  000C80  1E26               	comf	(___aomod@divisor+3)^0,f,c
  2119  000C82  1E25               	comf	(___aomod@divisor+2)^0,f,c
  2120  000C84  1E24               	comf	(___aomod@divisor+1)^0,f,c
  2121  000C86  6C23               	negf	___aomod@divisor^0,c
  2122  000C88  0E00               	movlw	0
  2123  000C8A  2224               	addwfc	(___aomod@divisor+1)^0,f,c
  2124  000C8C  2225               	addwfc	(___aomod@divisor+2)^0,f,c
  2125  000C8E  2226               	addwfc	(___aomod@divisor+3)^0,f,c
  2126  000C90  2227               	addwfc	(___aomod@divisor+4)^0,f,c
  2127  000C92  2228               	addwfc	(___aomod@divisor+5)^0,f,c
  2128  000C94  2229               	addwfc	(___aomod@divisor+6)^0,f,c
  2129  000C96  222A               	addwfc	(___aomod@divisor+7)^0,f,c
  2130  000C98                     l1922:
  2131  000C98  5023               	movf	___aomod@divisor^0,w,c
  2132  000C9A  1024               	iorwf	(___aomod@divisor+1)^0,w,c
  2133  000C9C  1025               	iorwf	(___aomod@divisor+2)^0,w,c
  2134  000C9E  1026               	iorwf	(___aomod@divisor+3)^0,w,c
  2135  000CA0  1027               	iorwf	(___aomod@divisor+4)^0,w,c
  2136  000CA2  1028               	iorwf	(___aomod@divisor+5)^0,w,c
  2137  000CA4  1029               	iorwf	(___aomod@divisor+6)^0,w,c
  2138  000CA6  102A               	iorwf	(___aomod@divisor+7)^0,w,c
  2139  000CA8  B4D8               	btfsc	status,2,c
  2140  000CAA  EF59  F006         	goto	u1461
  2141  000CAE  EF5B  F006         	goto	u1460
  2142  000CB2                     u1461:
  2143  000CB2  EFA3  F006         	goto	l1938
  2144  000CB6                     u1460:
  2145  000CB6  0E01               	movlw	1
  2146  000CB8  6E2B               	movwf	___aomod@counter^0,c
  2147  000CBA  EF69  F006         	goto	l1928
  2148  000CBE                     l1926:
  2149  000CBE  90D8               	bcf	status,0,c
  2150  000CC0  3623               	rlcf	___aomod@divisor^0,f,c
  2151  000CC2  3624               	rlcf	(___aomod@divisor+1)^0,f,c
  2152  000CC4  3625               	rlcf	(___aomod@divisor+2)^0,f,c
  2153  000CC6  3626               	rlcf	(___aomod@divisor+3)^0,f,c
  2154  000CC8  3627               	rlcf	(___aomod@divisor+4)^0,f,c
  2155  000CCA  3628               	rlcf	(___aomod@divisor+5)^0,f,c
  2156  000CCC  3629               	rlcf	(___aomod@divisor+6)^0,f,c
  2157  000CCE  362A               	rlcf	(___aomod@divisor+7)^0,f,c
  2158  000CD0  2A2B               	incf	___aomod@counter^0,f,c
  2159  000CD2                     l1928:
  2160  000CD2  AE2A               	btfss	(___aomod@divisor+7)^0,7,c
  2161  000CD4  EF6E  F006         	goto	u1471
  2162  000CD8  EF70  F006         	goto	u1470
  2163  000CDC                     u1471:
  2164  000CDC  EF5F  F006         	goto	l1926
  2165  000CE0                     u1470:
  2166  000CE0                     l1930:
  2167  000CE0  5023               	movf	___aomod@divisor^0,w,c
  2168  000CE2  5C1B               	subwf	___aomod@dividend^0,w,c
  2169  000CE4  5024               	movf	(___aomod@divisor+1)^0,w,c
  2170  000CE6  581C               	subwfb	(___aomod@dividend+1)^0,w,c
  2171  000CE8  5025               	movf	(___aomod@divisor+2)^0,w,c
  2172  000CEA  581D               	subwfb	(___aomod@dividend+2)^0,w,c
  2173  000CEC  5026               	movf	(___aomod@divisor+3)^0,w,c
  2174  000CEE  581E               	subwfb	(___aomod@dividend+3)^0,w,c
  2175  000CF0  5027               	movf	(___aomod@divisor+4)^0,w,c
  2176  000CF2  581F               	subwfb	(___aomod@dividend+4)^0,w,c
  2177  000CF4  5028               	movf	(___aomod@divisor+5)^0,w,c
  2178  000CF6  5820               	subwfb	(___aomod@dividend+5)^0,w,c
  2179  000CF8  5029               	movf	(___aomod@divisor+6)^0,w,c
  2180  000CFA  5821               	subwfb	(___aomod@dividend+6)^0,w,c
  2181  000CFC  502A               	movf	(___aomod@divisor+7)^0,w,c
  2182  000CFE  5822               	subwfb	(___aomod@dividend+7)^0,w,c
  2183  000D00  A0D8               	btfss	status,0,c
  2184  000D02  EF85  F006         	goto	u1481
  2185  000D06  EF87  F006         	goto	u1480
  2186  000D0A                     u1481:
  2187  000D0A  EF97  F006         	goto	l1934
  2188  000D0E                     u1480:
  2189  000D0E  5023               	movf	___aomod@divisor^0,w,c
  2190  000D10  5E1B               	subwf	___aomod@dividend^0,f,c
  2191  000D12  5024               	movf	(___aomod@divisor+1)^0,w,c
  2192  000D14  5A1C               	subwfb	(___aomod@dividend+1)^0,f,c
  2193  000D16  5025               	movf	(___aomod@divisor+2)^0,w,c
  2194  000D18  5A1D               	subwfb	(___aomod@dividend+2)^0,f,c
  2195  000D1A  5026               	movf	(___aomod@divisor+3)^0,w,c
  2196  000D1C  5A1E               	subwfb	(___aomod@dividend+3)^0,f,c
  2197  000D1E  5027               	movf	(___aomod@divisor+4)^0,w,c
  2198  000D20  5A1F               	subwfb	(___aomod@dividend+4)^0,f,c
  2199  000D22  5028               	movf	(___aomod@divisor+5)^0,w,c
  2200  000D24  5A20               	subwfb	(___aomod@dividend+5)^0,f,c
  2201  000D26  5029               	movf	(___aomod@divisor+6)^0,w,c
  2202  000D28  5A21               	subwfb	(___aomod@dividend+6)^0,f,c
  2203  000D2A  502A               	movf	(___aomod@divisor+7)^0,w,c
  2204  000D2C  5A22               	subwfb	(___aomod@dividend+7)^0,f,c
  2205  000D2E                     l1934:
  2206  000D2E  90D8               	bcf	status,0,c
  2207  000D30  322A               	rrcf	(___aomod@divisor+7)^0,f,c
  2208  000D32  3229               	rrcf	(___aomod@divisor+6)^0,f,c
  2209  000D34  3228               	rrcf	(___aomod@divisor+5)^0,f,c
  2210  000D36  3227               	rrcf	(___aomod@divisor+4)^0,f,c
  2211  000D38  3226               	rrcf	(___aomod@divisor+3)^0,f,c
  2212  000D3A  3225               	rrcf	(___aomod@divisor+2)^0,f,c
  2213  000D3C  3224               	rrcf	(___aomod@divisor+1)^0,f,c
  2214  000D3E  3223               	rrcf	___aomod@divisor^0,f,c
  2215  000D40  2E2B               	decfsz	___aomod@counter^0,f,c
  2216  000D42  EF70  F006         	goto	l1930
  2217  000D46                     l1938:
  2218  000D46  502C               	movf	___aomod@sign^0,w,c
  2219  000D48  B4D8               	btfsc	status,2,c
  2220  000D4A  EFA9  F006         	goto	u1491
  2221  000D4E  EFAB  F006         	goto	u1490
  2222  000D52                     u1491:
  2223  000D52  EFBB  F006         	goto	l1942
  2224  000D56                     u1490:
  2225  000D56  1E22               	comf	(___aomod@dividend+7)^0,f,c
  2226  000D58  1E21               	comf	(___aomod@dividend+6)^0,f,c
  2227  000D5A  1E20               	comf	(___aomod@dividend+5)^0,f,c
  2228  000D5C  1E1F               	comf	(___aomod@dividend+4)^0,f,c
  2229  000D5E  1E1E               	comf	(___aomod@dividend+3)^0,f,c
  2230  000D60  1E1D               	comf	(___aomod@dividend+2)^0,f,c
  2231  000D62  1E1C               	comf	(___aomod@dividend+1)^0,f,c
  2232  000D64  6C1B               	negf	___aomod@dividend^0,c
  2233  000D66  0E00               	movlw	0
  2234  000D68  221C               	addwfc	(___aomod@dividend+1)^0,f,c
  2235  000D6A  221D               	addwfc	(___aomod@dividend+2)^0,f,c
  2236  000D6C  221E               	addwfc	(___aomod@dividend+3)^0,f,c
  2237  000D6E  221F               	addwfc	(___aomod@dividend+4)^0,f,c
  2238  000D70  2220               	addwfc	(___aomod@dividend+5)^0,f,c
  2239  000D72  2221               	addwfc	(___aomod@dividend+6)^0,f,c
  2240  000D74  2222               	addwfc	(___aomod@dividend+7)^0,f,c
  2241  000D76                     l1942:
  2242  000D76  C01B  F01B         	movff	___aomod@dividend,?___aomod
  2243  000D7A  C01C  F01C         	movff	___aomod@dividend+1,?___aomod+1
  2244  000D7E  C01D  F01D         	movff	___aomod@dividend+2,?___aomod+2
  2245  000D82  C01E  F01E         	movff	___aomod@dividend+3,?___aomod+3
  2246  000D86  C01F  F01F         	movff	___aomod@dividend+4,?___aomod+4
  2247  000D8A  C020  F020         	movff	___aomod@dividend+5,?___aomod+5
  2248  000D8E  C021  F021         	movff	___aomod@dividend+6,?___aomod+6
  2249  000D92  C022  F022         	movff	___aomod@dividend+7,?___aomod+7
  2250  000D96  0012               	return		;funcret
  2251  000D98                     __end_of___aomod:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function ___aodiv *****************
  2255 ;; Defined at:
  2256 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  dividend        8   26[COMRAM] long long 
  2259 ;;  divisor         8   34[COMRAM] long long 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  quotient        8   44[COMRAM] long long 
  2262 ;;  sign            1   43[COMRAM] unsigned char 
  2263 ;;  counter         1   42[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  8   26[COMRAM] long long 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2273 ;;      Params:        16       0       0       0       0       0       0
  2274 ;;      Locals:        10       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0
  2276 ;;      Totals:        26       0       0       0       0       0       0
  2277 ;;Total ram usage:       26 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    6
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_dtoa
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text13
  2288  000AAC                     __ptext13:
  2289                           	callstack 0
  2290  000AAC                     ___aodiv:
  2291                           	callstack 19
  2292  000AAC  0E00               	movlw	0
  2293  000AAE  6E2C               	movwf	___aodiv@sign^0,c
  2294  000AB0  BE2A               	btfsc	(___aodiv@divisor+7)^0,7,c
  2295  000AB2  EF5F  F005         	goto	u1370
  2296  000AB6  EF5D  F005         	goto	u1371
  2297  000ABA                     u1371:
  2298  000ABA  EF71  F005         	goto	l1874
  2299  000ABE                     u1370:
  2300  000ABE  1E2A               	comf	(___aodiv@divisor+7)^0,f,c
  2301  000AC0  1E29               	comf	(___aodiv@divisor+6)^0,f,c
  2302  000AC2  1E28               	comf	(___aodiv@divisor+5)^0,f,c
  2303  000AC4  1E27               	comf	(___aodiv@divisor+4)^0,f,c
  2304  000AC6  1E26               	comf	(___aodiv@divisor+3)^0,f,c
  2305  000AC8  1E25               	comf	(___aodiv@divisor+2)^0,f,c
  2306  000ACA  1E24               	comf	(___aodiv@divisor+1)^0,f,c
  2307  000ACC  6C23               	negf	___aodiv@divisor^0,c
  2308  000ACE  0E00               	movlw	0
  2309  000AD0  2224               	addwfc	(___aodiv@divisor+1)^0,f,c
  2310  000AD2  2225               	addwfc	(___aodiv@divisor+2)^0,f,c
  2311  000AD4  2226               	addwfc	(___aodiv@divisor+3)^0,f,c
  2312  000AD6  2227               	addwfc	(___aodiv@divisor+4)^0,f,c
  2313  000AD8  2228               	addwfc	(___aodiv@divisor+5)^0,f,c
  2314  000ADA  2229               	addwfc	(___aodiv@divisor+6)^0,f,c
  2315  000ADC  222A               	addwfc	(___aodiv@divisor+7)^0,f,c
  2316  000ADE  0E01               	movlw	1
  2317  000AE0  6E2C               	movwf	___aodiv@sign^0,c
  2318  000AE2                     l1874:
  2319  000AE2  BE22               	btfsc	(___aodiv@dividend+7)^0,7,c
  2320  000AE4  EF78  F005         	goto	u1380
  2321  000AE8  EF76  F005         	goto	u1381
  2322  000AEC                     u1381:
  2323  000AEC  EF8A  F005         	goto	l1880
  2324  000AF0                     u1380:
  2325  000AF0  1E22               	comf	(___aodiv@dividend+7)^0,f,c
  2326  000AF2  1E21               	comf	(___aodiv@dividend+6)^0,f,c
  2327  000AF4  1E20               	comf	(___aodiv@dividend+5)^0,f,c
  2328  000AF6  1E1F               	comf	(___aodiv@dividend+4)^0,f,c
  2329  000AF8  1E1E               	comf	(___aodiv@dividend+3)^0,f,c
  2330  000AFA  1E1D               	comf	(___aodiv@dividend+2)^0,f,c
  2331  000AFC  1E1C               	comf	(___aodiv@dividend+1)^0,f,c
  2332  000AFE  6C1B               	negf	___aodiv@dividend^0,c
  2333  000B00  0E00               	movlw	0
  2334  000B02  221C               	addwfc	(___aodiv@dividend+1)^0,f,c
  2335  000B04  221D               	addwfc	(___aodiv@dividend+2)^0,f,c
  2336  000B06  221E               	addwfc	(___aodiv@dividend+3)^0,f,c
  2337  000B08  221F               	addwfc	(___aodiv@dividend+4)^0,f,c
  2338  000B0A  2220               	addwfc	(___aodiv@dividend+5)^0,f,c
  2339  000B0C  2221               	addwfc	(___aodiv@dividend+6)^0,f,c
  2340  000B0E  2222               	addwfc	(___aodiv@dividend+7)^0,f,c
  2341  000B10  0E01               	movlw	1
  2342  000B12  1A2C               	xorwf	___aodiv@sign^0,f,c
  2343  000B14                     l1880:
  2344  000B14  EE20  F02D         	lfsr	2,___aodiv@quotient
  2345  000B18  0E07               	movlw	7
  2346  000B1A                     u1391:
  2347  000B1A  6ADE               	clrf	postinc2,c
  2348  000B1C  06E8               	decf	wreg,f,c
  2349  000B1E  E2FD               	bc	u1391
  2350  000B20  5023               	movf	___aodiv@divisor^0,w,c
  2351  000B22  1024               	iorwf	(___aodiv@divisor+1)^0,w,c
  2352  000B24  1025               	iorwf	(___aodiv@divisor+2)^0,w,c
  2353  000B26  1026               	iorwf	(___aodiv@divisor+3)^0,w,c
  2354  000B28  1027               	iorwf	(___aodiv@divisor+4)^0,w,c
  2355  000B2A  1028               	iorwf	(___aodiv@divisor+5)^0,w,c
  2356  000B2C  1029               	iorwf	(___aodiv@divisor+6)^0,w,c
  2357  000B2E  102A               	iorwf	(___aodiv@divisor+7)^0,w,c
  2358  000B30  B4D8               	btfsc	status,2,c
  2359  000B32  EF9D  F005         	goto	u1401
  2360  000B36  EF9F  F005         	goto	u1400
  2361  000B3A                     u1401:
  2362  000B3A  EFF1  F005         	goto	l1902
  2363  000B3E                     u1400:
  2364  000B3E  0E01               	movlw	1
  2365  000B40  6E2B               	movwf	___aodiv@counter^0,c
  2366  000B42  EFAD  F005         	goto	l1888
  2367  000B46                     l1886:
  2368  000B46  90D8               	bcf	status,0,c
  2369  000B48  3623               	rlcf	___aodiv@divisor^0,f,c
  2370  000B4A  3624               	rlcf	(___aodiv@divisor+1)^0,f,c
  2371  000B4C  3625               	rlcf	(___aodiv@divisor+2)^0,f,c
  2372  000B4E  3626               	rlcf	(___aodiv@divisor+3)^0,f,c
  2373  000B50  3627               	rlcf	(___aodiv@divisor+4)^0,f,c
  2374  000B52  3628               	rlcf	(___aodiv@divisor+5)^0,f,c
  2375  000B54  3629               	rlcf	(___aodiv@divisor+6)^0,f,c
  2376  000B56  362A               	rlcf	(___aodiv@divisor+7)^0,f,c
  2377  000B58  2A2B               	incf	___aodiv@counter^0,f,c
  2378  000B5A                     l1888:
  2379  000B5A  AE2A               	btfss	(___aodiv@divisor+7)^0,7,c
  2380  000B5C  EFB2  F005         	goto	u1411
  2381  000B60  EFB4  F005         	goto	u1410
  2382  000B64                     u1411:
  2383  000B64  EFA3  F005         	goto	l1886
  2384  000B68                     u1410:
  2385  000B68                     l1890:
  2386  000B68  90D8               	bcf	status,0,c
  2387  000B6A  362D               	rlcf	___aodiv@quotient^0,f,c
  2388  000B6C  362E               	rlcf	(___aodiv@quotient+1)^0,f,c
  2389  000B6E  362F               	rlcf	(___aodiv@quotient+2)^0,f,c
  2390  000B70  3630               	rlcf	(___aodiv@quotient+3)^0,f,c
  2391  000B72  3631               	rlcf	(___aodiv@quotient+4)^0,f,c
  2392  000B74  3632               	rlcf	(___aodiv@quotient+5)^0,f,c
  2393  000B76  3633               	rlcf	(___aodiv@quotient+6)^0,f,c
  2394  000B78  3634               	rlcf	(___aodiv@quotient+7)^0,f,c
  2395  000B7A  5023               	movf	___aodiv@divisor^0,w,c
  2396  000B7C  5C1B               	subwf	___aodiv@dividend^0,w,c
  2397  000B7E  5024               	movf	(___aodiv@divisor+1)^0,w,c
  2398  000B80  581C               	subwfb	(___aodiv@dividend+1)^0,w,c
  2399  000B82  5025               	movf	(___aodiv@divisor+2)^0,w,c
  2400  000B84  581D               	subwfb	(___aodiv@dividend+2)^0,w,c
  2401  000B86  5026               	movf	(___aodiv@divisor+3)^0,w,c
  2402  000B88  581E               	subwfb	(___aodiv@dividend+3)^0,w,c
  2403  000B8A  5027               	movf	(___aodiv@divisor+4)^0,w,c
  2404  000B8C  581F               	subwfb	(___aodiv@dividend+4)^0,w,c
  2405  000B8E  5028               	movf	(___aodiv@divisor+5)^0,w,c
  2406  000B90  5820               	subwfb	(___aodiv@dividend+5)^0,w,c
  2407  000B92  5029               	movf	(___aodiv@divisor+6)^0,w,c
  2408  000B94  5821               	subwfb	(___aodiv@dividend+6)^0,w,c
  2409  000B96  502A               	movf	(___aodiv@divisor+7)^0,w,c
  2410  000B98  5822               	subwfb	(___aodiv@dividend+7)^0,w,c
  2411  000B9A  A0D8               	btfss	status,0,c
  2412  000B9C  EFD2  F005         	goto	u1421
  2413  000BA0  EFD4  F005         	goto	u1420
  2414  000BA4                     u1421:
  2415  000BA4  EFE5  F005         	goto	l1898
  2416  000BA8                     u1420:
  2417  000BA8  5023               	movf	___aodiv@divisor^0,w,c
  2418  000BAA  5E1B               	subwf	___aodiv@dividend^0,f,c
  2419  000BAC  5024               	movf	(___aodiv@divisor+1)^0,w,c
  2420  000BAE  5A1C               	subwfb	(___aodiv@dividend+1)^0,f,c
  2421  000BB0  5025               	movf	(___aodiv@divisor+2)^0,w,c
  2422  000BB2  5A1D               	subwfb	(___aodiv@dividend+2)^0,f,c
  2423  000BB4  5026               	movf	(___aodiv@divisor+3)^0,w,c
  2424  000BB6  5A1E               	subwfb	(___aodiv@dividend+3)^0,f,c
  2425  000BB8  5027               	movf	(___aodiv@divisor+4)^0,w,c
  2426  000BBA  5A1F               	subwfb	(___aodiv@dividend+4)^0,f,c
  2427  000BBC  5028               	movf	(___aodiv@divisor+5)^0,w,c
  2428  000BBE  5A20               	subwfb	(___aodiv@dividend+5)^0,f,c
  2429  000BC0  5029               	movf	(___aodiv@divisor+6)^0,w,c
  2430  000BC2  5A21               	subwfb	(___aodiv@dividend+6)^0,f,c
  2431  000BC4  502A               	movf	(___aodiv@divisor+7)^0,w,c
  2432  000BC6  5A22               	subwfb	(___aodiv@dividend+7)^0,f,c
  2433  000BC8  802D               	bsf	___aodiv@quotient^0,0,c
  2434  000BCA                     l1898:
  2435  000BCA  90D8               	bcf	status,0,c
  2436  000BCC  322A               	rrcf	(___aodiv@divisor+7)^0,f,c
  2437  000BCE  3229               	rrcf	(___aodiv@divisor+6)^0,f,c
  2438  000BD0  3228               	rrcf	(___aodiv@divisor+5)^0,f,c
  2439  000BD2  3227               	rrcf	(___aodiv@divisor+4)^0,f,c
  2440  000BD4  3226               	rrcf	(___aodiv@divisor+3)^0,f,c
  2441  000BD6  3225               	rrcf	(___aodiv@divisor+2)^0,f,c
  2442  000BD8  3224               	rrcf	(___aodiv@divisor+1)^0,f,c
  2443  000BDA  3223               	rrcf	___aodiv@divisor^0,f,c
  2444  000BDC  2E2B               	decfsz	___aodiv@counter^0,f,c
  2445  000BDE  EFB4  F005         	goto	l1890
  2446  000BE2                     l1902:
  2447  000BE2  502C               	movf	___aodiv@sign^0,w,c
  2448  000BE4  B4D8               	btfsc	status,2,c
  2449  000BE6  EFF7  F005         	goto	u1431
  2450  000BEA  EFF9  F005         	goto	u1430
  2451  000BEE                     u1431:
  2452  000BEE  EF09  F006         	goto	l1906
  2453  000BF2                     u1430:
  2454  000BF2  1E34               	comf	(___aodiv@quotient+7)^0,f,c
  2455  000BF4  1E33               	comf	(___aodiv@quotient+6)^0,f,c
  2456  000BF6  1E32               	comf	(___aodiv@quotient+5)^0,f,c
  2457  000BF8  1E31               	comf	(___aodiv@quotient+4)^0,f,c
  2458  000BFA  1E30               	comf	(___aodiv@quotient+3)^0,f,c
  2459  000BFC  1E2F               	comf	(___aodiv@quotient+2)^0,f,c
  2460  000BFE  1E2E               	comf	(___aodiv@quotient+1)^0,f,c
  2461  000C00  6C2D               	negf	___aodiv@quotient^0,c
  2462  000C02  0E00               	movlw	0
  2463  000C04  222E               	addwfc	(___aodiv@quotient+1)^0,f,c
  2464  000C06  222F               	addwfc	(___aodiv@quotient+2)^0,f,c
  2465  000C08  2230               	addwfc	(___aodiv@quotient+3)^0,f,c
  2466  000C0A  2231               	addwfc	(___aodiv@quotient+4)^0,f,c
  2467  000C0C  2232               	addwfc	(___aodiv@quotient+5)^0,f,c
  2468  000C0E  2233               	addwfc	(___aodiv@quotient+6)^0,f,c
  2469  000C10  2234               	addwfc	(___aodiv@quotient+7)^0,f,c
  2470  000C12                     l1906:
  2471  000C12  C02D  F01B         	movff	___aodiv@quotient,?___aodiv
  2472  000C16  C02E  F01C         	movff	___aodiv@quotient+1,?___aodiv+1
  2473  000C1A  C02F  F01D         	movff	___aodiv@quotient+2,?___aodiv+2
  2474  000C1E  C030  F01E         	movff	___aodiv@quotient+3,?___aodiv+3
  2475  000C22  C031  F01F         	movff	___aodiv@quotient+4,?___aodiv+4
  2476  000C26  C032  F020         	movff	___aodiv@quotient+5,?___aodiv+5
  2477  000C2A  C033  F021         	movff	___aodiv@quotient+6,?___aodiv+6
  2478  000C2E  C034  F022         	movff	___aodiv@quotient+7,?___aodiv+7
  2479  000C32  0012               	return		;funcret
  2480  000C34                     __end_of___aodiv:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _UART_Write_Text *****************
  2484 ;; Defined at:
  2485 ;;		line 50 in file "setting_hardaware/uart.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  text            2   27[COMRAM] PTR unsigned char 
  2488 ;;		 -> write_adc@str(12), STR_2(5), STR_1(11), 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  i               2   31[COMRAM] int 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2500 ;;      Params:         2       0       0       0       0       0       0
  2501 ;;      Locals:         2       0       0       0       0       0       0
  2502 ;;      Temps:          2       0       0       0       0       0       0
  2503 ;;      Totals:         6       0       0       0       0       0       0
  2504 ;;Total ram usage:        6 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    7
  2507 ;; This function calls:
  2508 ;;		_UART_Write
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;;		_write_adc
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text14
  2516  000FD4                     __ptext14:
  2517                           	callstack 0
  2518  000FD4                     _UART_Write_Text:
  2519                           	callstack 22
  2520  000FD4                     
  2521                           ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  2522  000FD4  0E00               	movlw	0
  2523  000FD6  6E21               	movwf	(UART_Write_Text@i+1)^0,c
  2524  000FD8  0E00               	movlw	0
  2525  000FDA  6E20               	movwf	UART_Write_Text@i^0,c
  2526  000FDC  EF0A  F008         	goto	l1684
  2527  000FE0                     l1680:
  2528                           
  2529                           ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  2530  000FE0  5020               	movf	UART_Write_Text@i^0,w,c
  2531  000FE2  241C               	addwf	UART_Write_Text@text^0,w,c
  2532  000FE4  6E1E               	movwf	??_UART_Write_Text^0,c
  2533  000FE6  5021               	movf	(UART_Write_Text@i+1)^0,w,c
  2534  000FE8  201D               	addwfc	(UART_Write_Text@text+1)^0,w,c
  2535  000FEA  6E1F               	movwf	(??_UART_Write_Text+1)^0,c
  2536  000FEC  C01E  FFF6         	movff	??_UART_Write_Text,tblptrl
  2537  000FF0  C01F  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  2538  000FF4  6AF8               	clrf	tblptru,c
  2539  000FF6  0E05               	movlw	(high __ramtop+-1)
  2540  000FF8  64F7               	cpfsgt	tblptrh,c
  2541  000FFA  D003               	bra	u1117
  2542  000FFC  0008               	tblrd		*
  2543  000FFE  50F5               	movf	tablat,w,c
  2544  001000  D005               	bra	u1110
  2545  001002                     u1117:
  2546  001002  CFF6 FFE1          	movff	tblptrl,fsr1l
  2547  001006  CFF7 FFE2          	movff	tblptrh,fsr1h
  2548  00100A  50E7               	movf	indf1,w,c
  2549  00100C                     u1110:
  2550  00100C  EC42  F00A         	call	_UART_Write
  2551  001010  4A20               	infsnz	UART_Write_Text@i^0,f,c
  2552  001012  2A21               	incf	(UART_Write_Text@i+1)^0,f,c
  2553  001014                     l1684:
  2554  001014  5020               	movf	UART_Write_Text@i^0,w,c
  2555  001016  241C               	addwf	UART_Write_Text@text^0,w,c
  2556  001018  6E1E               	movwf	??_UART_Write_Text^0,c
  2557  00101A  5021               	movf	(UART_Write_Text@i+1)^0,w,c
  2558  00101C  201D               	addwfc	(UART_Write_Text@text+1)^0,w,c
  2559  00101E  6E1F               	movwf	(??_UART_Write_Text+1)^0,c
  2560  001020  C01E  FFF6         	movff	??_UART_Write_Text,tblptrl
  2561  001024  C01F  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  2562  001028  6AF8               	clrf	tblptru,c
  2563  00102A  0E05               	movlw	(high __ramtop+-1)
  2564  00102C  64F7               	cpfsgt	tblptrh,c
  2565  00102E  D003               	bra	u1127
  2566  001030  0008               	tblrd		*
  2567  001032  50F5               	movf	tablat,w,c
  2568  001034  D005               	bra	u1120
  2569  001036                     u1127:
  2570  001036  CFF6 FFE1          	movff	tblptrl,fsr1l
  2571  00103A  CFF7 FFE2          	movff	tblptrh,fsr1h
  2572  00103E  50E7               	movf	indf1,w,c
  2573  001040                     u1120:
  2574  001040  0900               	iorlw	0
  2575  001042  A4D8               	btfss	status,2,c
  2576  001044  EF26  F008         	goto	u1131
  2577  001048  EF28  F008         	goto	u1130
  2578  00104C                     u1131:
  2579  00104C  EFF0  F007         	goto	l1680
  2580  001050                     u1130:
  2581  001050  0012               	return		;funcret
  2582  001052                     __end_of_UART_Write_Text:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _UART_Write *****************
  2586 ;; Defined at:
  2587 ;;		line 40 in file "setting_hardaware/uart.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  data            1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  data            1   26[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         0       0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    6
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_UART_Write_Text
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text15
  2616  001484                     __ptext15:
  2617                           	callstack 0
  2618  001484                     _UART_Write:
  2619                           	callstack 22
  2620                           
  2621                           ;incstack = 0
  2622                           ;UART_Write@data stored from wreg
  2623  001484  6E1B               	movwf	UART_Write@data^0,c
  2624  001486                     l60:
  2625  001486  A2AC               	btfss	172,1,c	;volatile
  2626  001488  EF48  F00A         	goto	u1091
  2627  00148C  EF4A  F00A         	goto	u1090
  2628  001490                     u1091:
  2629  001490  EF43  F00A         	goto	l60
  2630  001494                     u1090:
  2631  001494                     
  2632                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  2633  001494  C01B  FFAD         	movff	UART_Write@data,4013	;volatile
  2634  001498  0012               	return		;funcret
  2635  00149A                     __end_of_UART_Write:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _GetString *****************
  2639 ;; Defined at:
  2640 ;;		line 46 in file "setting_hardaware/uart.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2   26[COMRAM] PTR unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2654 ;;      Params:         2       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0
  2657 ;;      Totals:         2       0       0       0       0       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    6
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_write_adc
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text16
  2669  0014E8                     __ptext16:
  2670                           	callstack 0
  2671  0014E8                     _GetString:
  2672                           	callstack 23
  2673  0014E8                     
  2674                           ;setting_hardaware/uart.c: 47:     return mystring;
  2675  0014E8  0EB6               	movlw	low _mystring
  2676  0014EA  6E1B               	movwf	?_GetString^0,c
  2677  0014EC  0E00               	movlw	high _mystring
  2678  0014EE  6E1C               	movwf	(?_GetString+1)^0,c
  2679  0014F0  0012               	return		;funcret
  2680  0014F2                     __end_of_GetString:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _ADC_Read *****************
  2684 ;; Defined at:
  2685 ;;		line 13 in file "setting_hardaware/adc.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  channel         2   26[COMRAM] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  digital         2   30[COMRAM] int 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2   26[COMRAM] int 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         2       0       0       0       0       0       0
  2700 ;;      Locals:         2       0       0       0       0       0       0
  2701 ;;      Temps:          2       0       0       0       0       0       0
  2702 ;;      Totals:         6       0       0       0       0       0       0
  2703 ;;Total ram usage:        6 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    6
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_write_adc
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text17
  2714  001272                     __ptext17:
  2715                           	callstack 0
  2716  001272                     _ADC_Read:
  2717                           	callstack 23
  2718  001272                     
  2719                           ;setting_hardaware/adc.c: 13: int ADC_Read(int channel);setting_hardaware/adc.c: 14: {;s
      +                          etting_hardaware/adc.c: 15:     int digital;;setting_hardaware/adc.c: 18:     ADCON0bits
      +                          .CHS = channel;
  2720  001272  C01B  F01D         	movff	ADC_Read@channel,??_ADC_Read
  2721  001276  461D               	rlncf	??_ADC_Read^0,f,c
  2722  001278  461D               	rlncf	??_ADC_Read^0,f,c
  2723  00127A  50C2               	movf	194,w,c	;volatile
  2724  00127C  181D               	xorwf	??_ADC_Read^0,w,c
  2725  00127E  0BC3               	andlw	-61
  2726  001280  181D               	xorwf	??_ADC_Read^0,w,c
  2727  001282  6EC2               	movwf	194,c	;volatile
  2728  001284                     
  2729                           ;setting_hardaware/adc.c: 19:     ADCON0bits.GO = 1;
  2730  001284  82C2               	bsf	194,1,c	;volatile
  2731  001286                     
  2732                           ;setting_hardaware/adc.c: 20:     ADCON0bits.ADON = 1;
  2733  001286  80C2               	bsf	194,0,c	;volatile
  2734  001288                     l125:
  2735  001288  B2C2               	btfsc	194,1,c	;volatile
  2736  00128A  EF49  F009         	goto	u1141
  2737  00128E  EF4B  F009         	goto	u1140
  2738  001292                     u1141:
  2739  001292  EF44  F009         	goto	l125
  2740  001296                     u1140:
  2741  001296                     
  2742                           ;setting_hardaware/adc.c: 24:     digital = (ADRESH*256) | (ADRESL);
  2743  001296  50C3               	movf	195,w,c	;volatile
  2744  001298  CFC4 F01D          	movff	4036,??_ADC_Read	;volatile
  2745  00129C  6A1E               	clrf	(??_ADC_Read+1)^0,c
  2746  00129E  C01D  F01E         	movff	??_ADC_Read,??_ADC_Read+1
  2747  0012A2  6A1D               	clrf	??_ADC_Read^0,c
  2748  0012A4  101D               	iorwf	??_ADC_Read^0,w,c
  2749  0012A6  6E1F               	movwf	ADC_Read@digital^0,c
  2750  0012A8  501E               	movf	(??_ADC_Read+1)^0,w,c
  2751  0012AA  6E20               	movwf	(ADC_Read@digital+1)^0,c
  2752  0012AC                     
  2753                           ;setting_hardaware/adc.c: 25:     return(digital);
  2754  0012AC  C01F  F01B         	movff	ADC_Read@digital,?_ADC_Read
  2755  0012B0  C020  F01C         	movff	ADC_Read@digital+1,?_ADC_Read+1
  2756  0012B4  0012               	return		;funcret
  2757  0012B6                     __end_of_ADC_Read:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _SYSTEM_Initialize *****************
  2761 ;; Defined at:
  2762 ;;		line 60 in file "setting_hardaware/setting.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    7
  2783 ;; This function calls:
  2784 ;;		_ADC_Initialize
  2785 ;;		_CCP1_Initialize
  2786 ;;		_INTERRUPT_Initialize
  2787 ;;		_OSCILLATOR_Initialize
  2788 ;;		_UART_Initialize
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text18
  2795  00146C                     __ptext18:
  2796                           	callstack 0
  2797  00146C                     _SYSTEM_Initialize:
  2798                           	callstack 23
  2799  00146C                     
  2800                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  2801  00146C  EC7E  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  2802                           
  2803                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  2804  001470  EC79  F00A         	call	_INTERRUPT_Initialize	;wreg free
  2805  001474                     
  2806                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  2807  001474  EC25  F00A         	call	_UART_Initialize	;wreg free
  2808  001478                     
  2809                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  2810  001478  EC6E  F00A         	call	_CCP1_Initialize	;wreg free
  2811  00147C                     
  2812                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  2813  00147C  EC4D  F00A         	call	_ADC_Initialize	;wreg free
  2814  001480                     
  2815                           ;setting_hardaware/setting.c: 73:     TRISBbits.TRISB0 = 1;
  2816  001480  8093               	bsf	147,0,c	;volatile
  2817  001482  0012               	return		;funcret
  2818  001484                     __end_of_SYSTEM_Initialize:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _UART_Initialize *****************
  2822 ;; Defined at:
  2823 ;;		line 7 in file "setting_hardaware/uart.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2837 ;;      Params:         0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    6
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_SYSTEM_Initialize
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text19
  2852  00144A                     __ptext19:
  2853                           	callstack 0
  2854  00144A                     _UART_Initialize:
  2855                           	callstack 23
  2856  00144A                     
  2857                           ;setting_hardaware/uart.c: 10:     TRISCbits.TRISC6 = 1;
  2858  00144A  8C94               	bsf	148,6,c	;volatile
  2859                           
  2860                           ;setting_hardaware/uart.c: 11:     TRISCbits.TRISC7 = 1;
  2861  00144C  8E94               	bsf	148,7,c	;volatile
  2862                           
  2863                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  2864  00144E  98AC               	bcf	172,4,c	;volatile
  2865                           
  2866                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0 ;
  2867  001450  96B8               	bcf	184,3,c	;volatile
  2868                           
  2869                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 1;
  2870  001452  84AC               	bsf	172,2,c	;volatile
  2871  001454                     
  2872                           ;setting_hardaware/uart.c: 25:     SPBRG = 207;
  2873  001454  0ECF               	movlw	207
  2874  001456  6EAF               	movwf	175,c	;volatile
  2875  001458                     
  2876                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  2877  001458  8EAB               	bsf	171,7,c	;volatile
  2878  00145A                     
  2879                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  2880  00145A  889E               	bsf	158,4,c	;volatile
  2881  00145C                     
  2882                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  2883  00145C  9A9E               	bcf	158,5,c	;volatile
  2884  00145E                     
  2885                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  2886  00145E  8AAC               	bsf	172,5,c	;volatile
  2887  001460                     
  2888                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  2889  001460  88AB               	bsf	171,4,c	;volatile
  2890  001462                     
  2891                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  2892  001462  989D               	bcf	157,4,c	;volatile
  2893  001464                     
  2894                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  2895  001464  989F               	bcf	159,4,c	;volatile
  2896  001466                     
  2897                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  2898  001466  8A9D               	bsf	157,5,c	;volatile
  2899  001468                     
  2900                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  2901  001468  9A9F               	bcf	159,5,c	;volatile
  2902  00146A  0012               	return		;funcret
  2903  00146C                     __end_of_UART_Initialize:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _OSCILLATOR_Initialize *****************
  2907 ;; Defined at:
  2908 ;;		line 76 in file "setting_hardaware/setting.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		None
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2922 ;;      Params:         0       0       0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    6
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_SYSTEM_Initialize
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text20
  2937  0014FC                     __ptext20:
  2938                           	callstack 0
  2939  0014FC                     _OSCILLATOR_Initialize:
  2940                           	callstack 23
  2941  0014FC                     
  2942                           ;setting_hardaware/setting.c: 78:     IRCF2 = 1;
  2943  0014FC  8CD3               	bsf	4051,6,c	;volatile
  2944                           
  2945                           ;setting_hardaware/setting.c: 79:     IRCF1 = 1;
  2946  0014FE  8AD3               	bsf	4051,5,c	;volatile
  2947                           
  2948                           ;setting_hardaware/setting.c: 80:     IRCF0 = 0;
  2949  001500  98D3               	bcf	4051,4,c	;volatile
  2950  001502  0012               	return		;funcret
  2951  001504                     __end_of_OSCILLATOR_Initialize:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _INTERRUPT_Initialize *****************
  2955 ;; Defined at:
  2956 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		None
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2970 ;;      Params:         0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_SYSTEM_Initialize
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text21
  2985  0014F2                     __ptext21:
  2986                           	callstack 0
  2987  0014F2                     _INTERRUPT_Initialize:
  2988                           	callstack 23
  2989  0014F2                     
  2990                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  2991  0014F2  8ED0               	bsf	208,7,c	;volatile
  2992                           
  2993                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  2994  0014F4  8EF2               	bsf	242,7,c	;volatile
  2995                           
  2996                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  2997  0014F6  8CF2               	bsf	242,6,c	;volatile
  2998                           
  2999                           ;setting_hardaware/interrupt_manager.c: 8:     INTCONbits.INT0IE = 1;
  3000  0014F8  88F2               	bsf	242,4,c	;volatile
  3001  0014FA  0012               	return		;funcret
  3002  0014FC                     __end_of_INTERRUPT_Initialize:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _CCP1_Initialize *****************
  3006 ;; Defined at:
  3007 ;;		line 3 in file "setting_hardaware/ccp1.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3021 ;;      Params:         0       0       0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_SYSTEM_Initialize
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text22
  3036  0014DC                     __ptext22:
  3037                           	callstack 0
  3038  0014DC                     _CCP1_Initialize:
  3039                           	callstack 23
  3040  0014DC                     
  3041                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  3042  0014DC  9494               	bcf	148,2,c	;volatile
  3043  0014DE                     
  3044                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  3045  0014DE  0E09               	movlw	9
  3046  0014E0  6EBD               	movwf	189,c	;volatile
  3047  0014E2                     
  3048                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  3049  0014E2  949E               	bcf	158,2,c	;volatile
  3050  0014E4                     
  3051                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
  3052  0014E4  849F               	bsf	159,2,c	;volatile
  3053  0014E6  0012               	return		;funcret
  3054  0014E8                     __end_of_CCP1_Initialize:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _ADC_Initialize *****************
  3058 ;; Defined at:
  3059 ;;		line 3 in file "setting_hardaware/adc.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         0       0       0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    6
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_SYSTEM_Initialize
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text23
  3088  00149A                     __ptext23:
  3089                           	callstack 0
  3090  00149A                     _ADC_Initialize:
  3091                           	callstack 23
  3092  00149A                     
  3093                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  3094  00149A  6892               	setf	146,c	;volatile
  3095  00149C                     
  3096                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  3097  00149C  0E0E               	movlw	14
  3098  00149E  6EC1               	movwf	193,c	;volatile
  3099  0014A0                     
  3100                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  3101  0014A0  8EC0               	bsf	4032,7,c	;volatile
  3102                           
  3103                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  3104  0014A2  0E07               	movlw	7
  3105  0014A4  12C0               	iorwf	192,f,c	;volatile
  3106                           
  3107                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  3108  0014A6  0E00               	movlw	0
  3109  0014A8  6EC4               	movwf	196,c	;volatile
  3110                           
  3111                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  3112  0014AA  0E00               	movlw	0
  3113  0014AC  6EC3               	movwf	195,c	;volatile
  3114  0014AE  0012               	return		;funcret
  3115  0014B0                     __end_of_ADC_Initialize:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _ClearBuffer *****************
  3119 ;; Defined at:
  3120 ;;		line 55 in file "setting_hardaware/uart.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  i               2   26[COMRAM] int 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         0       0       0       0       0       0       0
  3135 ;;      Locals:         2       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0
  3137 ;;      Totals:         2       0       0       0       0       0       0
  3138 ;;Total ram usage:        2 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    6
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text24
  3149  0012FA                     __ptext24:
  3150                           	callstack 0
  3151  0012FA                     _ClearBuffer:
  3152                           	callstack 24
  3153  0012FA                     
  3154                           ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
  3155  0012FA  0E00               	movlw	0
  3156  0012FC  6E1C               	movwf	(ClearBuffer@i+1)^0,c
  3157  0012FE  0E00               	movlw	0
  3158  001300  6E1B               	movwf	ClearBuffer@i^0,c
  3159  001302                     l1760:
  3160                           
  3161                           ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
  3162  001302  0EB6               	movlw	low _mystring
  3163  001304  241B               	addwf	ClearBuffer@i^0,w,c
  3164  001306  6ED9               	movwf	fsr2l,c
  3165  001308  0E00               	movlw	high _mystring
  3166  00130A  201C               	addwfc	(ClearBuffer@i+1)^0,w,c
  3167  00130C  6EDA               	movwf	fsr2h,c
  3168  00130E  0E00               	movlw	0
  3169  001310  6EDF               	movwf	indf2,c
  3170  001312  4A1B               	infsnz	ClearBuffer@i^0,f,c
  3171  001314  2A1C               	incf	(ClearBuffer@i+1)^0,f,c
  3172  001316  BE1C               	btfsc	(ClearBuffer@i+1)^0,7,c
  3173  001318  EF97  F009         	goto	u1231
  3174  00131C  501C               	movf	(ClearBuffer@i+1)^0,w,c
  3175  00131E  E109               	bnz	u1230
  3176  001320  0E0A               	movlw	10
  3177  001322  5C1B               	subwf	ClearBuffer@i^0,w,c
  3178  001324  A0D8               	btfss	status,0,c
  3179  001326  EF97  F009         	goto	u1231
  3180  00132A  EF99  F009         	goto	u1230
  3181  00132E                     u1231:
  3182  00132E  EF81  F009         	goto	l1760
  3183  001332                     u1230:
  3184  001332                     
  3185                           ;setting_hardaware/uart.c: 58:     lenStr = 0;
  3186  001332  0E00               	movlw	0
  3187  001334  6E64               	movwf	(_lenStr+1)^0,c
  3188  001336  0E00               	movlw	0
  3189  001338  6E63               	movwf	_lenStr^0,c
  3190  00133A  0012               	return		;funcret
  3191  00133C                     __end_of_ClearBuffer:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _Lo_ISR *****************
  3195 ;; Defined at:
  3196 ;;		line 75 in file "setting_hardaware/uart.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3210 ;;      Params:         0       0       0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0
  3212 ;;      Temps:          5       0       0       0       0       0       0
  3213 ;;      Totals:         5       0       0       0       0       0       0
  3214 ;;Total ram usage:        5 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    5
  3217 ;; This function calls:
  3218 ;;		_MyusartRead
  3219 ;; This function is called by:
  3220 ;;		Interrupt level 1
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	intcodelo
  3225  000018                     __pintcodelo:
  3226                           	callstack 0
  3227  000018                     _Lo_ISR:
  3228                           	callstack 16
  3229                           
  3230                           ;incstack = 0
  3231  000018  8065               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3232  00001A  CFD8 F016          	movff	status,??_Lo_ISR
  3233  00001E  CFE8 F017          	movff	wreg,??_Lo_ISR+1
  3234  000022  CFE0 F018          	movff	bsr,??_Lo_ISR+2
  3235  000026  CFD9 F019          	movff	fsr2l,??_Lo_ISR+3
  3236  00002A  CFDA F01A          	movff	fsr2h,??_Lo_ISR+4
  3237  00002E                     
  3238                           ;setting_hardaware/uart.c: 77:     if(RCIF)
  3239  00002E  AA9E               	btfss	3998,5,c	;volatile
  3240  000030  EF1C  F000         	goto	i1u128_21
  3241  000034  EF1E  F000         	goto	i1u128_20
  3242  000038                     i1u128_21:
  3243  000038  EF2A  F000         	goto	i1l87
  3244  00003C                     i1u128_20:
  3245  00003C                     
  3246                           ;setting_hardaware/uart.c: 78:     {;setting_hardaware/uart.c: 79:         if(RCSTAbits.
      +                          OERR)
  3247  00003C  A2AB               	btfss	171,1,c	;volatile
  3248  00003E  EF23  F000         	goto	i1u129_21
  3249  000042  EF25  F000         	goto	i1u129_20
  3250  000046                     i1u129_21:
  3251  000046  EF28  F000         	goto	i1l1812
  3252  00004A                     i1u129_20:
  3253  00004A                     
  3254                           ;setting_hardaware/uart.c: 80:         {;setting_hardaware/uart.c: 81:             CREN 
      +                          = 0;
  3255  00004A  98AB               	bcf	4011,4,c	;volatile
  3256                           
  3257                           ;setting_hardaware/uart.c: 82:             __nop();
  3258  00004C  F000               	nop	
  3259                           
  3260                           ;setting_hardaware/uart.c: 83:             CREN = 1;
  3261  00004E  88AB               	bsf	4011,4,c	;volatile
  3262  000050                     i1l1812:
  3263                           
  3264                           ;setting_hardaware/uart.c: 86:         MyusartRead();
  3265  000050  EC5B  F009         	call	_MyusartRead	;wreg free
  3266  000054                     i1l87:
  3267  000054  C01A  FFDA         	movff	??_Lo_ISR+4,fsr2h
  3268  000058  C019  FFD9         	movff	??_Lo_ISR+3,fsr2l
  3269  00005C  C018  FFE0         	movff	??_Lo_ISR+2,bsr
  3270  000060  C017  FFE8         	movff	??_Lo_ISR+1,wreg
  3271  000064  C016  FFD8         	movff	??_Lo_ISR,status
  3272  000068  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3273  00006A  0010               	retfie	
  3274  00006C                     __end_of_Lo_ISR:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _MyusartRead *****************
  3278 ;; Defined at:
  3279 ;;		line 61 in file "setting_hardaware/uart.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3293 ;;      Params:         0       0       0       0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0
  3296 ;;      Totals:         0       0       0       0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		___awmod
  3302 ;;		i1_UART_Write
  3303 ;; This function is called by:
  3304 ;;		_Lo_ISR
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text26
  3309  0012B6                     __ptext26:
  3310                           	callstack 0
  3311  0012B6                     _MyusartRead:
  3312                           	callstack 16
  3313  0012B6                     
  3314                           ;setting_hardaware/uart.c: 63:     mystring[lenStr] = RCREG;
  3315  0012B6  0EB6               	movlw	low _mystring
  3316  0012B8  2463               	addwf	_lenStr^0,w,c
  3317  0012BA  6ED9               	movwf	fsr2l,c
  3318  0012BC  0E00               	movlw	high _mystring
  3319  0012BE  2064               	addwfc	(_lenStr+1)^0,w,c
  3320  0012C0  6EDA               	movwf	fsr2h,c
  3321  0012C2  CFAE FFDF          	movff	4014,indf2	;volatile
  3322  0012C6                     
  3323                           ;setting_hardaware/uart.c: 64:     UART_Write(mystring[lenStr]);
  3324  0012C6  0EB6               	movlw	low _mystring
  3325  0012C8  2463               	addwf	_lenStr^0,w,c
  3326  0012CA  6ED9               	movwf	fsr2l,c
  3327  0012CC  0E00               	movlw	high _mystring
  3328  0012CE  2064               	addwfc	(_lenStr+1)^0,w,c
  3329  0012D0  6EDA               	movwf	fsr2h,c
  3330  0012D2  50DF               	movf	indf2,w,c
  3331  0012D4  EC58  F00A         	call	i1_UART_Write
  3332  0012D8                     
  3333                           ;setting_hardaware/uart.c: 65:     lenStr++;
  3334  0012D8  4A63               	infsnz	_lenStr^0,f,c
  3335  0012DA  2A64               	incf	(_lenStr+1)^0,f,c
  3336  0012DC                     
  3337                           ;setting_hardaware/uart.c: 66:     lenStr %= 10;
  3338  0012DC  C063  F010         	movff	_lenStr,___awmod@dividend
  3339  0012E0  C064  F011         	movff	_lenStr+1,___awmod@dividend+1
  3340  0012E4  0E00               	movlw	0
  3341  0012E6  6E13               	movwf	(___awmod@divisor+1)^0,c
  3342  0012E8  0E0A               	movlw	10
  3343  0012EA  6E12               	movwf	___awmod@divisor^0,c
  3344  0012EC  EC92  F007         	call	___awmod	;wreg free
  3345  0012F0  C010  F063         	movff	?___awmod,_lenStr
  3346  0012F4  C011  F064         	movff	?___awmod+1,_lenStr+1
  3347  0012F8  0012               	return		;funcret
  3348  0012FA                     __end_of_MyusartRead:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function i1_UART_Write *****************
  3352 ;; Defined at:
  3353 ;;		line 40 in file "setting_hardaware/uart.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  data            1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  data            1   15[COMRAM] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3367 ;;      Params:         0       0       0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0
  3370 ;;      Totals:         1       0       0       0       0       0       0
  3371 ;;Total ram usage:        1 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    3
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_MyusartRead
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text27
  3382  0014B0                     __ptext27:
  3383                           	callstack 0
  3384  0014B0                     i1_UART_Write:
  3385                           	callstack 16
  3386                           
  3387                           ;incstack = 0
  3388                           ;i1UART_Write@data stored from wreg
  3389  0014B0  6E10               	movwf	i1UART_Write@data^0,c
  3390  0014B2                     i1l60:
  3391  0014B2  A2AC               	btfss	172,1,c	;volatile
  3392  0014B4  EF5E  F00A         	goto	i1u121_21
  3393  0014B8  EF60  F00A         	goto	i1u121_20
  3394  0014BC                     i1u121_21:
  3395  0014BC  EF59  F00A         	goto	i1l60
  3396  0014C0                     i1u121_20:
  3397  0014C0                     
  3398                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  3399  0014C0  C010  FFAD         	movff	i1UART_Write@data,4013	;volatile
  3400  0014C4  0012               	return		;funcret
  3401  0014C6                     __end_ofi1_UART_Write:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function ___awmod *****************
  3405 ;; Defined at:
  3406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  dividend        2   15[COMRAM] int 
  3409 ;;  divisor         2   17[COMRAM] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  sign            1   20[COMRAM] unsigned char 
  3412 ;;  counter         1   19[COMRAM] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  2   15[COMRAM] int 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3422 ;;      Params:         4       0       0       0       0       0       0
  3423 ;;      Locals:         2       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0
  3425 ;;      Totals:         6       0       0       0       0       0       0
  3426 ;;Total ram usage:        6 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_MyusartRead
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text28
  3437  000F24                     __ptext28:
  3438                           	callstack 0
  3439  000F24                     ___awmod:
  3440                           	callstack 16
  3441  000F24  0E00               	movlw	0
  3442  000F26  6E15               	movwf	___awmod@sign^0,c
  3443  000F28  BE11               	btfsc	(___awmod@dividend+1)^0,7,c
  3444  000F2A  EF9B  F007         	goto	i1u115_20
  3445  000F2E  EF99  F007         	goto	i1u115_21
  3446  000F32                     i1u115_21:
  3447  000F32  EFA1  F007         	goto	i1l1718
  3448  000F36                     i1u115_20:
  3449  000F36  6C10               	negf	___awmod@dividend^0,c
  3450  000F38  1E11               	comf	(___awmod@dividend+1)^0,f,c
  3451  000F3A  B0D8               	btfsc	status,0,c
  3452  000F3C  2A11               	incf	(___awmod@dividend+1)^0,f,c
  3453  000F3E  0E01               	movlw	1
  3454  000F40  6E15               	movwf	___awmod@sign^0,c
  3455  000F42                     i1l1718:
  3456  000F42  BE13               	btfsc	(___awmod@divisor+1)^0,7,c
  3457  000F44  EFA8  F007         	goto	i1u116_20
  3458  000F48  EFA6  F007         	goto	i1u116_21
  3459  000F4C                     i1u116_21:
  3460  000F4C  EFAC  F007         	goto	i1l1722
  3461  000F50                     i1u116_20:
  3462  000F50  6C12               	negf	___awmod@divisor^0,c
  3463  000F52  1E13               	comf	(___awmod@divisor+1)^0,f,c
  3464  000F54  B0D8               	btfsc	status,0,c
  3465  000F56  2A13               	incf	(___awmod@divisor+1)^0,f,c
  3466  000F58                     i1l1722:
  3467  000F58  5012               	movf	___awmod@divisor^0,w,c
  3468  000F5A  1013               	iorwf	(___awmod@divisor+1)^0,w,c
  3469  000F5C  B4D8               	btfsc	status,2,c
  3470  000F5E  EFB3  F007         	goto	i1u117_21
  3471  000F62  EFB5  F007         	goto	i1u117_20
  3472  000F66                     i1u117_21:
  3473  000F66  EFD9  F007         	goto	i1l1738
  3474  000F6A                     i1u117_20:
  3475  000F6A  0E01               	movlw	1
  3476  000F6C  6E14               	movwf	___awmod@counter^0,c
  3477  000F6E  EFBD  F007         	goto	i1l1728
  3478  000F72                     i1l1726:
  3479  000F72  90D8               	bcf	status,0,c
  3480  000F74  3612               	rlcf	___awmod@divisor^0,f,c
  3481  000F76  3613               	rlcf	(___awmod@divisor+1)^0,f,c
  3482  000F78  2A14               	incf	___awmod@counter^0,f,c
  3483  000F7A                     i1l1728:
  3484  000F7A  AE13               	btfss	(___awmod@divisor+1)^0,7,c
  3485  000F7C  EFC2  F007         	goto	i1u118_21
  3486  000F80  EFC4  F007         	goto	i1u118_20
  3487  000F84                     i1u118_21:
  3488  000F84  EFB9  F007         	goto	i1l1726
  3489  000F88                     i1u118_20:
  3490  000F88                     i1l1730:
  3491  000F88  5012               	movf	___awmod@divisor^0,w,c
  3492  000F8A  5C10               	subwf	___awmod@dividend^0,w,c
  3493  000F8C  5013               	movf	(___awmod@divisor+1)^0,w,c
  3494  000F8E  5811               	subwfb	(___awmod@dividend+1)^0,w,c
  3495  000F90  A0D8               	btfss	status,0,c
  3496  000F92  EFCD  F007         	goto	i1u119_21
  3497  000F96  EFCF  F007         	goto	i1u119_20
  3498  000F9A                     i1u119_21:
  3499  000F9A  EFD3  F007         	goto	i1l1734
  3500  000F9E                     i1u119_20:
  3501  000F9E  5012               	movf	___awmod@divisor^0,w,c
  3502  000FA0  5E10               	subwf	___awmod@dividend^0,f,c
  3503  000FA2  5013               	movf	(___awmod@divisor+1)^0,w,c
  3504  000FA4  5A11               	subwfb	(___awmod@dividend+1)^0,f,c
  3505  000FA6                     i1l1734:
  3506  000FA6  90D8               	bcf	status,0,c
  3507  000FA8  3213               	rrcf	(___awmod@divisor+1)^0,f,c
  3508  000FAA  3212               	rrcf	___awmod@divisor^0,f,c
  3509  000FAC  2E14               	decfsz	___awmod@counter^0,f,c
  3510  000FAE  EFC4  F007         	goto	i1l1730
  3511  000FB2                     i1l1738:
  3512  000FB2  5015               	movf	___awmod@sign^0,w,c
  3513  000FB4  B4D8               	btfsc	status,2,c
  3514  000FB6  EFDF  F007         	goto	i1u120_21
  3515  000FBA  EFE1  F007         	goto	i1u120_20
  3516  000FBE                     i1u120_21:
  3517  000FBE  EFE5  F007         	goto	i1l1742
  3518  000FC2                     i1u120_20:
  3519  000FC2  6C10               	negf	___awmod@dividend^0,c
  3520  000FC4  1E11               	comf	(___awmod@dividend+1)^0,f,c
  3521  000FC6  B0D8               	btfsc	status,0,c
  3522  000FC8  2A11               	incf	(___awmod@dividend+1)^0,f,c
  3523  000FCA                     i1l1742:
  3524  000FCA  C010  F010         	movff	___awmod@dividend,?___awmod
  3525  000FCE  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
  3526  000FD2  0012               	return		;funcret
  3527  000FD4                     __end_of___awmod:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _ISR *****************
  3531 ;; Defined at:
  3532 ;;		line 12 in file "main.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3546 ;;      Params:         0       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0
  3548 ;;      Temps:          8       0       0       0       0       0       0
  3549 ;;      Totals:         8       0       0       0       0       0       0
  3550 ;;Total ram usage:        8 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    2
  3553 ;; This function calls:
  3554 ;;		i2_ClearBuffer
  3555 ;;		i2_UART_Write_Text
  3556 ;; This function is called by:
  3557 ;;		Interrupt level 2
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	intcode
  3562  000008                     __pintcode:
  3563                           	callstack 0
  3564  000008                     _ISR:
  3565                           	callstack 16
  3566                           
  3567                           ;incstack = 0
  3568  000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3569  00000A  ED68  F008         	call	int_func,f	;refresh shadow registers
  3570                           
  3571                           	psect	intcode_body
  3572  0010D0                     __pintcode_body:
  3573                           	callstack 16
  3574  0010D0                     int_func:
  3575                           	callstack 16
  3576  0010D0  0006               	pop		; remove dummy address from shadow register refresh
  3577  0010D2  CFE1 F008          	movff	fsr1l,??_ISR
  3578  0010D6  CFE2 F009          	movff	fsr1h,??_ISR+1
  3579  0010DA  CFD9 F00A          	movff	fsr2l,??_ISR+2
  3580  0010DE  CFDA F00B          	movff	fsr2h,??_ISR+3
  3581  0010E2  CFF6 F00C          	movff	tblptrl,??_ISR+4
  3582  0010E6  CFF7 F00D          	movff	tblptrh,??_ISR+5
  3583  0010EA  CFF8 F00E          	movff	tblptru,??_ISR+6
  3584  0010EE  CFF5 F00F          	movff	tablat,??_ISR+7
  3585  0010F2                     
  3586                           ;main.c: 14:     if (INTCONbits.INT0IF) {
  3587  0010F2  A2F2               	btfss	242,1,c	;volatile
  3588  0010F4  EF7E  F008         	goto	i2u130_41
  3589  0010F8  EF80  F008         	goto	i2u130_40
  3590  0010FC                     i2u130_41:
  3591  0010FC  EF89  F008         	goto	i2l154
  3592  001100                     i2u130_40:
  3593  001100                     
  3594                           ;main.c: 15:         ClearBuffer();
  3595  001100  EC9E  F009         	call	i2_ClearBuffer	;wreg free
  3596  001104                     
  3597                           ;main.c: 16:         UART_Write_Text("interrupt\n");
  3598  001104  0E01               	movlw	low STR_1
  3599  001106  6E02               	movwf	i2UART_Write_Text@text^0,c
  3600  001108  0E06               	movlw	high STR_1
  3601  00110A  6E03               	movwf	(i2UART_Write_Text@text+1)^0,c
  3602  00110C  EC29  F008         	call	i2_UART_Write_Text	;wreg free
  3603  001110                     
  3604                           ;main.c: 17:         INTCONbits.INT0IF = 0;
  3605  001110  92F2               	bcf	242,1,c	;volatile
  3606  001112                     i2l154:
  3607  001112  C00F  FFF5         	movff	??_ISR+7,tablat
  3608  001116  C00E  FFF8         	movff	??_ISR+6,tblptru
  3609  00111A  C00D  FFF7         	movff	??_ISR+5,tblptrh
  3610  00111E  C00C  FFF6         	movff	??_ISR+4,tblptrl
  3611  001122  C00B  FFDA         	movff	??_ISR+3,fsr2h
  3612  001126  C00A  FFD9         	movff	??_ISR+2,fsr2l
  3613  00112A  C009  FFE2         	movff	??_ISR+1,fsr1h
  3614  00112E  C008  FFE1         	movff	??_ISR,fsr1l
  3615  001132  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3616  001134  0011               	retfie		f
  3617  001136                     __end_of_ISR:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function i2_UART_Write_Text *****************
  3621 ;; Defined at:
  3622 ;;		line 50 in file "setting_hardaware/uart.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  text            2    1[COMRAM] PTR unsigned char 
  3625 ;;		 -> write_adc@str(12), STR_2(5), STR_1(11), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  i               2    5[COMRAM] int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3637 ;;      Params:         2       0       0       0       0       0       0
  3638 ;;      Locals:         2       0       0       0       0       0       0
  3639 ;;      Temps:          2       0       0       0       0       0       0
  3640 ;;      Totals:         6       0       0       0       0       0       0
  3641 ;;Total ram usage:        6 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    1
  3644 ;; This function calls:
  3645 ;;		i2_UART_Write
  3646 ;; This function is called by:
  3647 ;;		_ISR
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text30
  3652  001052                     __ptext30:
  3653                           	callstack 0
  3654  001052                     i2_UART_Write_Text:
  3655                           	callstack 16
  3656  001052                     
  3657                           ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  3658  001052  0E00               	movlw	0
  3659  001054  6E07               	movwf	(i2UART_Write_Text@i+1)^0,c
  3660  001056  0E00               	movlw	0
  3661  001058  6E06               	movwf	i2UART_Write_Text@i^0,c
  3662  00105A  EF49  F008         	goto	i2l1790
  3663  00105E                     i2l1786:
  3664                           
  3665                           ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  3666  00105E  5006               	movf	i2UART_Write_Text@i^0,w,c
  3667  001060  2402               	addwf	i2UART_Write_Text@text^0,w,c
  3668  001062  6E04               	movwf	??i2_UART_Write_Text^0,c
  3669  001064  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  3670  001066  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  3671  001068  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  3672  00106A  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  3673  00106E  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  3674  001072  6AF8               	clrf	tblptru,c
  3675  001074  0E05               	movlw	(high __ramtop+-1)
  3676  001076  64F7               	cpfsgt	tblptrh,c
  3677  001078  D003               	bra	i2u124_47
  3678  00107A  0008               	tblrd		*
  3679  00107C  50F5               	movf	tablat,w,c
  3680  00107E  D005               	bra	i2u124_40
  3681  001080                     i2u124_47:
  3682  001080  CFF6 FFE1          	movff	tblptrl,fsr1l
  3683  001084  CFF7 FFE2          	movff	tblptrh,fsr1h
  3684  001088  50E7               	movf	indf1,w,c
  3685  00108A                     i2u124_40:
  3686  00108A  EC63  F00A         	call	i2_UART_Write
  3687  00108E  4A06               	infsnz	i2UART_Write_Text@i^0,f,c
  3688  001090  2A07               	incf	(i2UART_Write_Text@i+1)^0,f,c
  3689  001092                     i2l1790:
  3690  001092  5006               	movf	i2UART_Write_Text@i^0,w,c
  3691  001094  2402               	addwf	i2UART_Write_Text@text^0,w,c
  3692  001096  6E04               	movwf	??i2_UART_Write_Text^0,c
  3693  001098  5007               	movf	(i2UART_Write_Text@i+1)^0,w,c
  3694  00109A  2003               	addwfc	(i2UART_Write_Text@text+1)^0,w,c
  3695  00109C  6E05               	movwf	(??i2_UART_Write_Text+1)^0,c
  3696  00109E  C004  FFF6         	movff	??i2_UART_Write_Text,tblptrl
  3697  0010A2  C005  FFF7         	movff	??i2_UART_Write_Text+1,tblptrh
  3698  0010A6  6AF8               	clrf	tblptru,c
  3699  0010A8  0E05               	movlw	(high __ramtop+-1)
  3700  0010AA  64F7               	cpfsgt	tblptrh,c
  3701  0010AC  D003               	bra	i2u125_47
  3702  0010AE  0008               	tblrd		*
  3703  0010B0  50F5               	movf	tablat,w,c
  3704  0010B2  D005               	bra	i2u125_40
  3705  0010B4                     i2u125_47:
  3706  0010B4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3707  0010B8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3708  0010BC  50E7               	movf	indf1,w,c
  3709  0010BE                     i2u125_40:
  3710  0010BE  0900               	iorlw	0
  3711  0010C0  A4D8               	btfss	status,2,c
  3712  0010C2  EF65  F008         	goto	i2u126_41
  3713  0010C6  EF67  F008         	goto	i2u126_40
  3714  0010CA                     i2u126_41:
  3715  0010CA  EF2F  F008         	goto	i2l1786
  3716  0010CE                     i2u126_40:
  3717  0010CE  0012               	return		;funcret
  3718  0010D0                     __end_ofi2_UART_Write_Text:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function i2_UART_Write *****************
  3722 ;; Defined at:
  3723 ;;		line 40 in file "setting_hardaware/uart.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  data            1    wreg     unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  data            1    0[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3737 ;;      Params:         0       0       0       0       0       0       0
  3738 ;;      Locals:         1       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0
  3740 ;;      Totals:         1       0       0       0       0       0       0
  3741 ;;Total ram usage:        1 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		i2_UART_Write_Text
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text31
  3751  0014C6                     __ptext31:
  3752                           	callstack 0
  3753  0014C6                     i2_UART_Write:
  3754                           	callstack 16
  3755                           
  3756                           ;incstack = 0
  3757                           ;i2UART_Write@data stored from wreg
  3758  0014C6  6E01               	movwf	i2UART_Write@data^0,c
  3759  0014C8                     i2l60:
  3760  0014C8  A2AC               	btfss	172,1,c	;volatile
  3761  0014CA  EF69  F00A         	goto	i2u122_41
  3762  0014CE  EF6B  F00A         	goto	i2u122_40
  3763  0014D2                     i2u122_41:
  3764  0014D2  EF64  F00A         	goto	i2l60
  3765  0014D6                     i2u122_40:
  3766  0014D6                     
  3767                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  3768  0014D6  C001  FFAD         	movff	i2UART_Write@data,4013	;volatile
  3769  0014DA  0012               	return		;funcret
  3770  0014DC                     __end_ofi2_UART_Write:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function i2_ClearBuffer *****************
  3774 ;; Defined at:
  3775 ;;		line 55 in file "setting_hardaware/uart.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  i               2    0[COMRAM] int 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3789 ;;      Params:         0       0       0       0       0       0       0
  3790 ;;      Locals:         2       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0
  3792 ;;      Totals:         2       0       0       0       0       0       0
  3793 ;;Total ram usage:        2 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_ISR
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text32
  3803  00133C                     __ptext32:
  3804                           	callstack 0
  3805  00133C                     i2_ClearBuffer:
  3806                           	callstack 17
  3807  00133C                     
  3808                           ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
  3809  00133C  0E00               	movlw	0
  3810  00133E  6E02               	movwf	(i2ClearBuffer@i+1)^0,c
  3811  001340  0E00               	movlw	0
  3812  001342  6E01               	movwf	i2ClearBuffer@i^0,c
  3813  001344                     i2l1798:
  3814                           
  3815                           ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
  3816  001344  0EB6               	movlw	low _mystring
  3817  001346  2401               	addwf	i2ClearBuffer@i^0,w,c
  3818  001348  6ED9               	movwf	fsr2l,c
  3819  00134A  0E00               	movlw	high _mystring
  3820  00134C  2002               	addwfc	(i2ClearBuffer@i+1)^0,w,c
  3821  00134E  6EDA               	movwf	fsr2h,c
  3822  001350  0E00               	movlw	0
  3823  001352  6EDF               	movwf	indf2,c
  3824  001354  4A01               	infsnz	i2ClearBuffer@i^0,f,c
  3825  001356  2A02               	incf	(i2ClearBuffer@i+1)^0,f,c
  3826  001358  BE02               	btfsc	(i2ClearBuffer@i+1)^0,7,c
  3827  00135A  EFB8  F009         	goto	i2u127_41
  3828  00135E  5002               	movf	(i2ClearBuffer@i+1)^0,w,c
  3829  001360  E109               	bnz	i2u127_40
  3830  001362  0E0A               	movlw	10
  3831  001364  5C01               	subwf	i2ClearBuffer@i^0,w,c
  3832  001366  A0D8               	btfss	status,0,c
  3833  001368  EFB8  F009         	goto	i2u127_41
  3834  00136C  EFBA  F009         	goto	i2u127_40
  3835  001370                     i2u127_41:
  3836  001370  EFA2  F009         	goto	i2l1798
  3837  001374                     i2u127_40:
  3838  001374                     
  3839                           ;setting_hardaware/uart.c: 58:     lenStr = 0;
  3840  001374  0E00               	movlw	0
  3841  001376  6E64               	movwf	(_lenStr+1)^0,c
  3842  001378  0E00               	movlw	0
  3843  00137A  6E63               	movwf	_lenStr^0,c
  3844  00137C  0012               	return		;funcret
  3845  00137E                     __end_ofi2_ClearBuffer:
  3846                           	callstack 0
  3847                           
  3848                           	psect	rparam
  3849  0000                     
  3850                           	psect	temp
  3851  000065                     btemp:
  3852                           	callstack 0
  3853  000065                     	ds	1
  3854  0000                     int$flags	set	btemp
  3855  0000                     wtemp8	set	btemp+1
  3856  0000                     ttemp5	set	btemp+1
  3857  0000                     ttemp6	set	btemp+4
  3858  0000                     ttemp7	set	btemp+8
  3859                           
  3860                           	psect	idloc
  3861                           
  3862                           ;Config register IDLOC0 @ 0x200000
  3863                           ;	unspecified, using default values
  3864  200000                     	org	2097152
  3865  200000  FF                 	db	255
  3866                           
  3867                           ;Config register IDLOC1 @ 0x200001
  3868                           ;	unspecified, using default values
  3869  200001                     	org	2097153
  3870  200001  FF                 	db	255
  3871                           
  3872                           ;Config register IDLOC2 @ 0x200002
  3873                           ;	unspecified, using default values
  3874  200002                     	org	2097154
  3875  200002  FF                 	db	255
  3876                           
  3877                           ;Config register IDLOC3 @ 0x200003
  3878                           ;	unspecified, using default values
  3879  200003                     	org	2097155
  3880  200003  FF                 	db	255
  3881                           
  3882                           ;Config register IDLOC4 @ 0x200004
  3883                           ;	unspecified, using default values
  3884  200004                     	org	2097156
  3885  200004  FF                 	db	255
  3886                           
  3887                           ;Config register IDLOC5 @ 0x200005
  3888                           ;	unspecified, using default values
  3889  200005                     	org	2097157
  3890  200005  FF                 	db	255
  3891                           
  3892                           ;Config register IDLOC6 @ 0x200006
  3893                           ;	unspecified, using default values
  3894  200006                     	org	2097158
  3895  200006  FF                 	db	255
  3896                           
  3897                           ;Config register IDLOC7 @ 0x200007
  3898                           ;	unspecified, using default values
  3899  200007                     	org	2097159
  3900  200007  FF                 	db	255
  3901                           
  3902                           	psect	config
  3903                           
  3904                           ; Padding undefined space
  3905  300000                     	org	3145728
  3906  300000  FF                 	db	255
  3907                           
  3908                           ;Config register CONFIG1H @ 0x300001
  3909                           ;	Oscillator Selection bits
  3910                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3911                           ;	Fail-Safe Clock Monitor Enable bit
  3912                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3913                           ;	Internal/External Oscillator Switchover bit
  3914                           ;	IESO = ON, Oscillator Switchover mode enabled
  3915  300001                     	org	3145729
  3916  300001  88                 	db	136
  3917                           
  3918                           ;Config register CONFIG2L @ 0x300002
  3919                           ;	Power-up Timer Enable bit
  3920                           ;	PWRT = OFF, PWRT disabled
  3921                           ;	Brown-out Reset Enable bits
  3922                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3923                           ;	Brown Out Reset Voltage bits
  3924                           ;	BORV = 3, Minimum setting
  3925  300002                     	org	3145730
  3926  300002  1F                 	db	31
  3927                           
  3928                           ;Config register CONFIG2H @ 0x300003
  3929                           ;	Watchdog Timer Enable bit
  3930                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3931                           ;	Watchdog Timer Postscale Select bits
  3932                           ;	WDTPS = 1, 1:1
  3933  300003                     	org	3145731
  3934  300003  00                 	db	0
  3935                           
  3936                           ; Padding undefined space
  3937  300004                     	org	3145732
  3938  300004  FF                 	db	255
  3939                           
  3940                           ;Config register CONFIG3H @ 0x300005
  3941                           ;	CCP2 MUX bit
  3942                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3943                           ;	PORTB A/D Enable bit
  3944                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3945                           ;	Low-Power Timer1 Oscillator Enable bit
  3946                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3947                           ;	MCLR Pin Enable bit
  3948                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3949  300005                     	org	3145733
  3950  300005  83                 	db	131
  3951                           
  3952                           ;Config register CONFIG4L @ 0x300006
  3953                           ;	Stack Full/Underflow Reset Enable bit
  3954                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3955                           ;	Single-Supply ICSP Enable bit
  3956                           ;	LVP = OFF, Single-Supply ICSP disabled
  3957                           ;	Extended Instruction Set Enable bit
  3958                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3959                           ;	Background Debugger Enable bit
  3960                           ;	DEBUG = 0x1, unprogrammed default
  3961  300006                     	org	3145734
  3962  300006  81                 	db	129
  3963                           
  3964                           ; Padding undefined space
  3965  300007                     	org	3145735
  3966  300007  FF                 	db	255
  3967                           
  3968                           ;Config register CONFIG5L @ 0x300008
  3969                           ;	Code Protection bit
  3970                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3971                           ;	Code Protection bit
  3972                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3973                           ;	Code Protection bit
  3974                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3975                           ;	Code Protection bit
  3976                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3977  300008                     	org	3145736
  3978  300008  0F                 	db	15
  3979                           
  3980                           ;Config register CONFIG5H @ 0x300009
  3981                           ;	Boot Block Code Protection bit
  3982                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3983                           ;	Data EEPROM Code Protection bit
  3984                           ;	CPD = OFF, Data EEPROM not code-protected
  3985  300009                     	org	3145737
  3986  300009  C0                 	db	192
  3987                           
  3988                           ;Config register CONFIG6L @ 0x30000A
  3989                           ;	Write Protection bit
  3990                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3991                           ;	Write Protection bit
  3992                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3993                           ;	Write Protection bit
  3994                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3995                           ;	Write Protection bit
  3996                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3997  30000A                     	org	3145738
  3998  30000A  0F                 	db	15
  3999                           
  4000                           ;Config register CONFIG6H @ 0x30000B
  4001                           ;	Configuration Register Write Protection bit
  4002                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4003                           ;	Boot Block Write Protection bit
  4004                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4005                           ;	Data EEPROM Write Protection bit
  4006                           ;	WRTD = OFF, Data EEPROM not write-protected
  4007  30000B                     	org	3145739
  4008  30000B  E0                 	db	224
  4009                           
  4010                           ;Config register CONFIG7L @ 0x30000C
  4011                           ;	Table Read Protection bit
  4012                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4013                           ;	Table Read Protection bit
  4014                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4015                           ;	Table Read Protection bit
  4016                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4017                           ;	Table Read Protection bit
  4018                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4019  30000C                     	org	3145740
  4020  30000C  0F                 	db	15
  4021                           
  4022                           ;Config register CONFIG7H @ 0x30000D
  4023                           ;	Boot Block Table Read Protection bit
  4024                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4025  30000D                     	org	3145741
  4026  30000D  40                 	db	64
  4027                           tosu	equ	0xFFF
  4028                           tosh	equ	0xFFE
  4029                           tosl	equ	0xFFD
  4030                           stkptr	equ	0xFFC
  4031                           pclatu	equ	0xFFB
  4032                           pclath	equ	0xFFA
  4033                           pcl	equ	0xFF9
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           indf0	equ	0xFEF
  4041                           postinc0	equ	0xFEE
  4042                           postdec0	equ	0xFED
  4043                           preinc0	equ	0xFEC
  4044                           plusw0	equ	0xFEB
  4045                           fsr0h	equ	0xFEA
  4046                           fsr0l	equ	0xFE9
  4047                           wreg	equ	0xFE8
  4048                           indf1	equ	0xFE7
  4049                           postinc1	equ	0xFE6
  4050                           postdec1	equ	0xFE5
  4051                           preinc1	equ	0xFE4
  4052                           plusw1	equ	0xFE3
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           bsr	equ	0xFE0
  4056                           indf2	equ	0xFDF
  4057                           postinc2	equ	0xFDE
  4058                           postdec2	equ	0xFDD
  4059                           preinc2	equ	0xFDC
  4060                           plusw2	equ	0xFDB
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     100
    BANK0           128     54     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 12
		 -> write_adc@str(BANK0[12]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 12
		 -> write_adc@str(BANK0[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1285_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 12
		 -> write_adc@str(BANK0[12]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 12
		 -> write_adc@str(BANK0[12]), 

    write_adc@s	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(BANK0[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 12
		 -> write_adc@str(BANK0[12]), STR_2(CODE[5]), STR_1(CODE[11]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(BANK0[20]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _ISR in COMRAM

    _ISR->i2_UART_Write_Text
    i2_UART_Write_Text->i2_UART_Write

Critical Paths under _main in BANK0

    _main->_write_adc
    _write_adc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9357
                                             91 COMRAM     1     1      0
                        _ClearBuffer
                  _SYSTEM_Initialize
                    _UART_Write_Text
                          _write_adc
 ---------------------------------------------------------------------------------
 (1) _write_adc                                           16    16      0    8975
                                             38 BANK0     16    16      0
                           _ADC_Read
                          _GetString
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8417
                                             22 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             14 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             89 COMRAM     2     2      0
                                              0 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             53 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             42 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             35 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             26 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             44 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             26 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             26 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     314
                                             27 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2     121
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearBuffer                                          2     2      0      68
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Lo_ISR                                              5     5      0     470
                                             21 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (11) _MyusartRead                                         0     0      0     470
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (12) i1_UART_Write                                        1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) ___awmod                                             6     2      4     448
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR                                                 8     8      0     206
                                              7 COMRAM     8     8      0
                      i2_ClearBuffer
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (14) i2_UART_Write_Text                                   6     4      2     138
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (15) i2_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_ClearBuffer                                       2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _write_adc
     _ADC_Read
     _GetString
     _UART_Write_Text
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _ISR (ROOT)
   i2_ClearBuffer
   i2_UART_Write_Text
     i2_UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     36      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      64       1       79.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E4      14        0.0%
DATA                 0      0      E4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Jan 09 16:22:14 2021

                            l21 1482                              l24 1502                              l60 1486  
                            l63 1498                              l72 1050                              l57 146A  
                            l66 14F0                              l77 133A                              l94 14FA  
                            bsr 000FE0         __end_of_CCP1_Initialize 14E8                             l105 14E6  
                           l122 14AE                             l125 1288                             l128 12B4  
                           l165 122C                             l282 0C32                             l295 0D96  
                           l911 0AAA                             l904 08F2                             l922 13B4  
                           l925 13BC                             l917 118E                             l918 1196  
                           l846 11E8                             l937 0E60                             l945 1270  
                           l873 0EA6                             l954 13F2                             l948 1504  
                           l876 0EE8                             l884 06B4                             l878 0F22  
                           l886 06BC                             _ISR 0008                             _abs 137E  
                           _pad 0E62                             _str 0080                    ___awmod@sign 0015  
                           wreg 000FE8                            ?_ISR 0001                            l2000 0784  
                          l1210 14FC                            l2010 082C                            l2002 078A  
                          ?_abs 002D                            l1212 14F2                            l1220 145A  
                          l2020 088E                            l2012 0846                            l2004 0790  
                          l2100 1220                            l1230 1464                            l1222 145C  
                          l1214 144A                            l2022 0894                            l2030 08CA  
                          l2014 0860                            l2006 07F4                            l2110 140C  
                          l2102 13F4                            l1240 14E2                            l1232 1466  
                          l1224 145E                            l1216 1454                            l2024 08A6  
                          l2008 080E                            l2016 086E                            l2040 0936  
                          l2104 13F8                            l1242 14E4                            l1234 1468  
                          l1226 1460                            l1218 1458                            l1330 146C  
                          l2026 08B2                            l2018 0880                            l2042 093A  
                          l2034 08F4                            l2106 1404                            l1244 149A  
                          l1236 14DC                            l1228 1462                            l1332 1474  
                          l2028 08BA                            l2052 0A04                            l2044 095E  
                          l2036 0918                            l2108 1408                            l1246 149C  
                          l1238 14DE                            l1334 1478                            l2070 0A98  
                          l2054 0A28                            l2062 0A58                            l2046 0982  
                          l2038 0926                            l1248 14A0                            l1336 147C  
                          l2064 0A66                            l2056 0A36                            l2048 09CC  
                          l2080 114C                            l1338 1480                            l2058 0A4A  
                          l2082 1172                            l2090 11BA                            l2068 0A74  
                          l2076 1136                            l2092 11D6                            l2084 1198  
                          l2078 113E                            l2086 11AA                            l2088 11B2  
                          l2096 11EA                            l2098 1202                            l1900 0BDC  
                          l1662 1486                            l1902 0BE2                            l1910 0C34  
                          l1760 1302                            l1664 1494                            l1680 0FE0  
                          l1904 0BF2                            l1920 0C78                            l1912 0C38  
                          l1840 0DC6                            l1762 1312                            l1754 12FA  
                          l1690 1286                            l1674 14E8                            l1682 1010  
                          l1906 0C12                            l1930 0CE0                            l1922 0C98  
                          l1914 0C46                            l1842 0DE4                            l1834 0D98  
                          l1850 123A                            l1764 1316                            l1692 1296  
                          l1684 1014                            l1940 0D56                            l1932 0D0E  
                          l1924 0CB6                            l1916 0C66                            l1844 0E1A  
                          l1836 0DAA                            l1852 124C                            l1860 13CE  
                          l1766 1332                            l1694 12AC                            l1686 1272  
                          l1678 0FD4                            l1870 0ABE                            l1942 0D76  
                          l1934 0D2E                            l1926 0CBE                            l1918 0C6A  
                          l1838 0DBC                            l1854 1250                            l1862 13E6  
                          l1950 0E84                            l1688 1284                            l1880 0B14  
                          l1872 0ADE                            l1936 0D40                            l1928 0CD2  
                          l1848 122E                            l1856 13BE                            l1960 0ECA  
                          l1952 0E92                            l1890 0B68                            l1882 0B20  
                          l1874 0AE2                            l1866 0AAC                            l1938 0D46  
                          l1970 1398                            l1858 13CA                            l1962 0EF6  
                          l1954 0E9E                            l1946 0E62                            l1892 0B7A  
                          l1884 0B3E                            l1876 0AF0                            l1868 0AB0  
                          l1964 0F0A                            l1956 0EB2                            l1948 0E70  
                          l1980 068C                            l1972 0616                            l1894 0BA8  
                          l1886 0B46                            l1878 0B10                            l1958 0EC6  
                          l1990 06E4                            l1982 068E                            l1974 0636  
                          ?_pad 002B                            l1896 0BC8                            l1888 0B5A  
                          l1968 137E                            l1992 06EA                            l1984 06A8  
                          l1976 065E                            l1898 0BCA                            l1994 06F2  
                          l1986 06C4                            l1978 067E                            l1996 06FC  
                          l1988 06D6                            l1998 0702                            _ADFM 007E07  
                          STR_1 0601                            STR_2 060C                            STR_3 0611  
                          _CREN 007D5C                            u1110 100C                            u1120 1040  
                          u1130 1050                            u1131 104C                            u1140 1296  
                          u1141 1292                            u1117 1002                            u1230 1332  
                          u1310 0DAA                            u1231 132E                            u1127 1036  
                          u1311 0DA6                            u1400 0B3E                            u1320 0DBC  
                          u1401 0B3A                            u1321 0DB8                            u1090 1494  
                          u1410 0B68                            u1330 0DE4                            u1091 1490  
                          u1411 0B64                            u1331 0DE0                            u1420 0BA8  
                          u1340 0E1A                            u1500 0E70                            u1421 0BA4  
                          u1341 0E16                            u1501 0E6C                            u1430 0BF2  
                          u1350 1270                            u1510 0E92                            u1431 0BEE  
                          u1351 126C                            u1511 0E8E                            u1440 0C46  
                          u1360 13E6                            u1520 0EE8                            u1600 06D6  
                          u1441 0C42                            u1361 13E2                            u1521 0EE4  
                          u1601 06D2                            u1370 0ABE                            u1450 0C78  
                          u1530 0EF6                            u1610 06E4                            u1371 0ABA  
                          u1451 0C74                            u1531 0EF2                            u1611 06E0  
                          u1380 0AF0                            u1460 0CB6                            u1540 1398  
                          u1620 080E                            u1700 0918                            u1381 0AEC  
                          u1461 0CB2                            u1541 1394                            u1621 080A  
                          u1701 0914                            u1470 0CE0                            u1630 082C  
                          u1550 0646                            u1710 095E                            u1391 0B1A  
                          u1471 0CDC                            u1631 0828                            u1551 0640  
                          u1711 095A                            u1480 0D0E                            u1640 0846  
                          u1560 0648                            u1720 0982                            u1481 0D0A  
                          u1641 0842                            u1721 097E                            u1490 0D56  
                          u1650 0860                            u1570 065E                            u1730 0A28  
                          u1491 0D52                            u1651 085C                            u1571 065A  
                          u1731 0A24                            u1660 086E                            u1580 068C  
                          u1740 118E                            u1661 086A                            u1581 0688  
                          u1741 118A                            u1670 0880                            u1590 06A8  
                          u1671 087C                            u1591 06A4                            u1680 088E  
                          u1681 088A                            u1690 08A6                            u1691 08A2  
                          u1757 1412                            i1l60 14B2                            _RCIF 007CF5  
                          i1l63 14C4                            i1l80 12F8                            i2l60 14C8  
                          i2l63 14DA                            i1l87 0054                            i2l72 10CE  
                          i2l77 137C                            abs@a 002D                            _dbuf 0096  
                          _main 13F4                            _dtoa 0616                            _prec 005F  
                          _nout 0094                            pad@i 0032                            pad@p 002F  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 0034  
                          fsr2l 000FD9                            btemp 0065                __end_of_ADC_Read 12B6  
                          start 006C                    ___param_bank 000000         __end_of_UART_Write_Text 1052  
                         ??_ISR 0008                           ??_abs 002F                           ??_pad 0031  
              ?_UART_Initialize 0001  __size_of_OSCILLATOR_Initialize 0008   __end_of_OSCILLATOR_Initialize 1504  
               __end_of___aodiv 0C34                           ?_main 0001                           ?_dtoa 0036  
               __end_of___aomod 0D98                 __end_of___awmod 0FD4                           _IRCF0 007E9C  
                         _IRCF1 007E9D                           _IRCF2 007E9E                           i1l412 0FD2  
                         i2l154 1112                           _RCREG 000FAE                    vfpfcnvrt@fmt 00CC  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TXREG 000FAD  
                   ?_UART_Write 0001                           _flags 0061                           _fputc 0D98  
                         _fputs 122E                           pad@fp 002B                           _width 005D  
                         _putch 1504                           dtoa@d 0038                           dtoa@i 0058  
                         dtoa@n 0050                           dtoa@p 004A                           dtoa@s 004E  
                         dtoa@w 004C                     _ClearBuffer 12FA                           tablat 000FF5  
                         ttemp5 0066                           ttemp6 0069                           ttemp7 006D  
                         status 000FD8                           wtemp8 0066                 __end_of_sprintf 11EA  
               __initialization 1424                    __end_of_main 1424                    __end_of_dtoa 08F4  
                        ??_main 005C                          ??_dtoa 0040                ?_CCP1_Initialize 0001  
                 __activetblptr 000002              __size_of_GetString 000A                          _ADCON1 000FC1  
                        ?_fputc 001B                          ?_fputs 0024                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          ?_putch 0001                          i1l1710 0F24  
                        i1l1720 0F50                          i1l1712 0F28                          i1l1730 0F88  
                        i1l1722 0F58                          i1l1714 0F36                          i1l1810 004A  
                        i1l1740 0FC2                          i1l1732 0F9E                          i1l1724 0F6A  
                        i1l1716 0F3E                          i1l1812 0050                          i1l1742 0FCA  
                        i1l1734 0FA6                          i1l1726 0F72                          i1l1718 0F42  
                        i1l1806 002E                          i1l1736 0FAC                          i1l1728 0F7A  
                        i1l1808 003C                          i1l1738 0FB2                          i1l1746 14B2  
                        i1l1770 12C6                          i1l1748 14C0                          i1l1772 12D8  
                        i1l1774 12DC                          i1l1768 12B6                          i2l1800 1354  
                        i2l1802 1358                          i2l1804 1374                          i2l1820 1104  
                        i2l1750 14C8                          i2l1822 1110                          i2l1752 14D6  
                        i2l1816 10F2                          i2l1818 1100                          i2l1790 1092  
                        i2l1792 133C                          i2l1784 1052                          i2l1786 105E  
                        i2l1788 108E                          i2l1798 1344                          _Lo_ISR 0018  
                  vfprintf@cfmt 00DE             __size_of_UART_Write 0016                       ??___aodiv 002B  
                     ??___aomod 002B                       ??___awmod 0014                ?_UART_Write_Text 001C  
               ADC_Read@channel 001B                          _lenStr 0063                 ADC_Read@digital 001F  
                        clear_0 142A                          clear_1 1436                 ___awmod@divisor 0012  
               ___awmod@counter 0014                          pad@buf 002D                          dtoa@fp 0036  
                        _strlen 13BE                          fputc@c 001B                          fputs@c 0028  
                        fputs@i 0029                          fputs@s 0024                       ?_ADC_Read 001B  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          putch@c 0001                __end_of_vfprintf 1198  
                     ??_sprintf 005C           __end_ofi2_ClearBuffer 137E   __size_of_INTERRUPT_Initialize 000A  
             _SYSTEM_Initialize 146C                      __accesstop 0080         __end_of__initialization 143C  
            ?_SYSTEM_Initialize 0001                   ___rparam_used 000001               __end_of_GetString 14F2  
                 ?i1_UART_Write 0001                  __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 001B  
                 __end_of_fputc 0E62                   __end_of_fputs 1272                   __end_of_putch 1506  
                    ??_ADC_Read 001D                   ??_MyusartRead 0016                   ?i2_UART_Write 0001  
                       ??_fputc 001F       __end_of_SYSTEM_Initialize 1484                         ??_fputs 0028  
                       ??_putch 001B                      __pbssBANK0 0080                i2UART_Write@data 0001  
                       ?_Lo_ISR 0001                  ??i1_UART_Write 0010              i2UART_Write_Text@i 0006  
                       _CCP1CON 000FBD         __size_of_ADC_Initialize 0016                         ?_strlen 001B  
                ??i2_UART_Write 0001                    ??_UART_Write 001B              __size_of_vfpfcnvrt 01B8  
                  ?_ClearBuffer 0001             __end_of_MyusartRead 12FA              __size_of_write_adc 0044  
               __size_of_Lo_ISR 0054                         __Hparam 0000                         __Lparam 0000  
                       ___aodiv 0AAC                         ___aomod 0C34                         ___awmod 0F24  
            __end_of_UART_Write 149A                       ?_vfprintf 00D8                    __psmallconst 0600  
                       __pcinit 1424                         __ramtop 0600                         __ptext0 13F4  
                       __ptext1 11EA                         __ptext2 1198                         __ptext3 1136  
                       __ptext4 08F4                         __ptext5 0616                         __ptext6 0E62  
                       __ptext7 13BE                         __ptext8 122E                         __ptext9 0D98  
               __size_of_strlen 0036                    __size_of_ISR 112E           _OSCILLATOR_Initialize 14FC  
                  __size_of_abs 0040                    __size_of_pad 00C2                ___awmod@dividend 0010  
      __size_of_UART_Initialize 0022      __size_of_SYSTEM_Initialize 0018                         _sprintf 1198  
                __pintcode_body 10D0            end_of_initialization 143C                         fputc@fp 001D  
                 __Lmediumconst 0000                         int_func 10D0                         fputs@fp 0026  
             __end_of_vfpfcnvrt 0AAC                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 005C                         strlen@a 001D                         strlen@s 001B  
                UART_Write@data 001B               __end_of_write_adc 122E                       _TRISBbits 000F93  
                     _TRISCbits 000F94                     _MyusartRead 12B6            __end_ofi1_UART_Write 14C6  
             __size_of_ADC_Read 0044        __size_of_CCP1_Initialize 000C                    write_adc@str 00F0  
                     _TXSTAbits 000FAC                  __end_of_Lo_ISR 006C            __end_ofi2_UART_Write 14DC  
  __end_of_INTERRUPT_Initialize 14FC                       _GetString 14E8                     vfpfcnvrt@ap 00CE  
                   vfpfcnvrt@fp 00CA                     vfpfcnvrt@ll 00D0                     _BAUDCONbits 000FB8  
                _ADC_Initialize 149A          ?_OSCILLATOR_Initialize 0001        __size_of_UART_Write_Text 007E  
                __end_of_strlen 13F4             start_initialization 1424                     __end_of_ISR 1136  
                   __end_of_abs 13BE                     __end_of_pad 0F24                    ClearBuffer@i 001B  
             ??_UART_Initialize 001B            __size_of_ClearBuffer 0042                        ??_Lo_ISR 0016  
                   vfprintf@fmt 00DA          __end_of_ADC_Initialize 14B0                      ?_GetString 001B  
        __size_ofi2_ClearBuffer 0042                        ??_strlen 001D                     __pbssCOMRAM 005D  
             i2_UART_Write_Text 1052                   __pcstackBANK0 00CA                ___aodiv@dividend 001B  
            ?i2_UART_Write_Text 0002           i2UART_Write_Text@text 0002             ??i2_UART_Write_Text 0004  
             ??_CCP1_Initialize 001B                       _dtoa$1358 0048                       __pintcode 0008  
                      ?___aodiv 001B                        ?___aomod 001B                ___aodiv@quotient 002D  
                      ?___awmod 0010                 ?_ADC_Initialize 0001                     __pintcodelo 0018  
         __size_ofi1_UART_Write 0016               __size_of_vfprintf 0062       __end_ofi2_UART_Write_Text 10D0  
                   __smallconst 0600                        _ADC_Read 1272                        ?_sprintf 00E0  
                __size_of_fputc 00CA                  __size_of_fputs 0044                  __size_of_putch 0002  
             ??_UART_Write_Text 001E            _INTERRUPT_Initialize 14F2                   i2_ClearBuffer 133C  
         __size_ofi2_UART_Write 0016                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                      i1u120_20 0FC2                        i1u120_21 0FBE                        i1u121_20 14C0  
                      i1u121_21 14BC                        i1u115_20 0F36                        i1u115_21 0F32  
                      i1u116_20 0F50                        i1u116_21 0F4C                        i1u117_20 0F6A  
                      i1u117_21 0F66                        i1u118_20 0F88                        i1u118_21 0F84  
                      i1u119_20 0F9E                        i1u119_21 0F9A                        i1u128_20 003C  
                      i1u128_21 0038                        i1u129_20 004A                        i1u129_21 0046  
                      i2u122_40 14D6                        i2u130_40 1100                        i2u122_41 14D2  
                      i2u130_41 10FC                        i2u124_40 108A                        i2u124_47 1080  
                      i2u125_40 10BE                        i2u125_47 10B4                        i2u126_40 10CE  
                      i2u126_41 10CA                        i2u127_40 1374                        i2u127_41 1370  
                      _PIR1bits 000F9E                    i1_UART_Write 14B0                        _RCONbits 000FD0  
                   ??_GetString 001D                       _vfpfcnvrt 08F4                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0                    ?_MyusartRead 0001                    i2_UART_Write 14C6  
                     _write_adc 11EA           ?_INTERRUPT_Initialize 0001                  ?i2_ClearBuffer 0001  
              i1UART_Write@data 0010                  i2ClearBuffer@i 0001                        __Hrparam 0000  
                    vfprintf@ap 00DC                        __Lrparam 0000                      vfprintf@fp 00D8  
       ??_OSCILLATOR_Initialize 001B                __size_of___aodiv 0188                __size_of___aomod 0164  
              __size_of___awmod 00B0                      ?_vfpfcnvrt 00CA                 ___aodiv@divisor 0023  
               ___aodiv@counter 002B      __size_ofi2_UART_Write_Text 007E                 _UART_Initialize 144A  
                    sprintf@fmt 00E2                        __ptext10 1504                        __ptext11 137E  
                      __ptext20 14FC                        __ptext12 0C34                        __ptext21 14F2  
                      __ptext13 0AAC                        __ptext30 1052                        __ptext22 14DC  
                      __ptext14 0FD4                        __ptext31 14C6                        __ptext23 149A  
                      __ptext15 1484                        __ptext32 133C                        __ptext24 12FA  
                      __ptext16 14E8                        __ptext17 1272                        __ptext26 12B6  
                      __ptext18 146C                        __ptext27 14B0                        __ptext19 144A  
                      __ptext28 0F24                      ?_write_adc 0001                __size_of_sprintf 0052  
           UART_Write_Text@text 001C                   __size_of_main 0030                   __size_of_dtoa 02DE  
                      int$flags 0065                      write_adc@n 00FE                        _vfprintf 1136  
                      _mystring 00B6                ___aomod@dividend 001B                      _INTCONbits 000FF2  
               _CCP1_Initialize 14DC          ??_INTERRUPT_Initialize 001B                 ??i2_ClearBuffer 0001  
                 ??_ClearBuffer 001B                        intlevel1 0000                        intlevel2 0000  
                     sprintf@ap 00E8                ??_ADC_Initialize 001B         __end_of_UART_Initialize 146C  
               ___aomod@divisor 0023                     ??_vfpfcnvrt 005A                 ___aomod@counter 002B  
               _UART_Write_Text 0FD4                        sprintf@f 00EA                        sprintf@s 00E0  
                    _UART_Write 1484                     ??_write_adc 005C            __size_of_MyusartRead 0044  
                  ___aodiv@sign 002C                UART_Write_Text@i 0020             __end_of_ClearBuffer 133C  
                  ___aomod@sign 002C  
